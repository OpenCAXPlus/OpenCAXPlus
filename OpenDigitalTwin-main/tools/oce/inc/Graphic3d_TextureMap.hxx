// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Graphic3d_TextureMap_HeaderFile
#define _Graphic3d_TextureMap_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_Graphic3d_TextureMap.hxx>

#include <Graphic3d_TextureRoot.hxx>
#include <Graphic3d_TypeOfTexture.hxx>
#include <Image_PixMap_Handle.hxx>
#include <Standard_Boolean.hxx>
#include <Graphic3d_LevelOfTextureAnisotropy.hxx>
class TCollection_AsciiString;


//! This is an abstract class for managing texture applyable on polygons.
class Graphic3d_TextureMap : public Graphic3d_TextureRoot
{

public:

  

  //! enable texture smoothing
  Standard_EXPORT   void EnableSmooth() ;
  

  //! Returns TRUE if the texture is smoothed.
  Standard_EXPORT   Standard_Boolean IsSmoothed()  const;
  

  //! disable texture smoothing
  Standard_EXPORT   void DisableSmooth() ;
  

  //! enable texture modulate mode.
  //! the image is modulate with the shading of the surface.
  Standard_EXPORT   void EnableModulate() ;
  

  //! disable texture modulate mode.
  //! the image is directly decal on the surface.
  Standard_EXPORT   void DisableModulate() ;
  

  //! Returns TRUE if the texture is modulate.
  Standard_EXPORT   Standard_Boolean IsModulate()  const;
  

  //! use this methods if you want to enable
  //! texture repetition on your objects.
  Standard_EXPORT   void EnableRepeat() ;
  

  //! use this methods if you want to disable
  //! texture repetition on your objects.
  Standard_EXPORT   void DisableRepeat() ;
  

  //! Returns TRUE if the texture repeat is enable.
  Standard_EXPORT   Standard_Boolean IsRepeat()  const;
  
  //! @return level of anisontropy texture filter.
  //! Default value is Graphic3d_LOTA_OFF.
  Standard_EXPORT   Graphic3d_LevelOfTextureAnisotropy AnisoFilter()  const;
  
  //! @param theLevel level of anisontropy texture filter.
  Standard_EXPORT   void SetAnisoFilter (const Graphic3d_LevelOfTextureAnisotropy theLevel) ;




  DEFINE_STANDARD_RTTI(Graphic3d_TextureMap)

protected:

  
  Standard_EXPORT Graphic3d_TextureMap(const TCollection_AsciiString& theFileName, const Graphic3d_TypeOfTexture theType);
  
  Standard_EXPORT Graphic3d_TextureMap(const Image_PixMap_Handle& thePixMap, const Graphic3d_TypeOfTexture theType);



private: 




};







#endif // _Graphic3d_TextureMap_HeaderFile
