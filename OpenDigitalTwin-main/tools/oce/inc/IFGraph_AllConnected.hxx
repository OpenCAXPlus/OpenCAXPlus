// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IFGraph_AllConnected_HeaderFile
#define _IFGraph_AllConnected_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Interface_Graph.hxx>
#include <Interface_GraphContent.hxx>
#include <Handle_Standard_Transient.hxx>
class Interface_Graph;
class Standard_Transient;


//! this class gives content of the CONNECTED COMPONANT(S)
//! which include specific Entity(ies)
class IFGraph_AllConnected  : public Interface_GraphContent
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! creates an AllConnected from a graph, empty ready to be filled
  Standard_EXPORT IFGraph_AllConnected(const Interface_Graph& agraph);
  
  //! creates an AllConnected which memorizes Entities Connected to
  //! a given one, at any level : that is, itself, all Entities
  //! Shared by it and Sharing it, and so on.
  //! In other terms, this is the content of the CONNECTED COMPONANT
  //! which include a specific Entity
  Standard_EXPORT IFGraph_AllConnected(const Interface_Graph& agraph, const Handle(Standard_Transient)& ent);
  
  //! adds an entity and its Connected ones to the list (allows to
  //! cumulate all Entities Connected by some ones)
  //! Note that if "ent" is in the already computed list,, no entity
  //! will be added, but if "ent" is not already in the list, a new
  //! Connected Componant will be cumulated
  Standard_EXPORT   void GetFromEntity (const Handle(Standard_Transient)& ent) ;
  
  //! Allows to restart on a new data set
  Standard_EXPORT   void ResetData() ;
  
  //! does the specific evaluation (Connected entities atall levels)
  Standard_EXPORT virtual   void Evaluate() ;




protected:





private:



  Interface_Graph thegraph;


};







#endif // _IFGraph_AllConnected_HeaderFile
