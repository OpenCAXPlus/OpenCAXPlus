// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESDefs_TabularData_HeaderFile
#define _IGESDefs_TabularData_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_IGESDefs_TabularData.hxx>

#include <Standard_Integer.hxx>
#include <Handle_TColStd_HArray1OfInteger.hxx>
#include <Handle_IGESBasic_HArray1OfHArray1OfReal.hxx>
#include <IGESData_IGESEntity.hxx>
#include <Standard_Boolean.hxx>
#include <Standard_Real.hxx>
#include <Handle_TColStd_HArray1OfReal.hxx>
class TColStd_HArray1OfInteger;
class IGESBasic_HArray1OfHArray1OfReal;
class Standard_DimensionMismatch;
class Standard_OutOfRange;
class TColStd_HArray1OfReal;


//! Defines IGES Tabular Data, Type <406> Form <11>,
//! in package IGESDefs
//! This Class is used to provide a Structure to accomodate
//! point form data.
class IGESDefs_TabularData : public IGESData_IGESEntity
{

public:

  
  Standard_EXPORT IGESDefs_TabularData();
  
  //! This method is used to set the fields of the class
  //! TabularData
  //! - nbProps     : Number of property values
  //! - propType    : Property Type
  //! - typesInd    : Type of independent variables
  //! - nbValuesInd : Number of values of independent variables
  //! - valuesInd   : Values of independent variables
  //! - valuesDep   : Values of dependent variables
  //! raises exception if lengths of typeInd and nbValuesInd are not same
  Standard_EXPORT   void Init (const Standard_Integer nbProps, const Standard_Integer propType, const Handle(TColStd_HArray1OfInteger)& typesInd, const Handle(TColStd_HArray1OfInteger)& nbValuesInd, const Handle(IGESBasic_HArray1OfHArray1OfReal)& valuesInd, const Handle(IGESBasic_HArray1OfHArray1OfReal)& valuesDep) ;
  
  //! returns the number of property values (recorded)
  Standard_EXPORT   Standard_Integer NbPropertyValues()  const;
  
  //! determines the number of property values required
  Standard_EXPORT   Standard_Integer ComputedNbPropertyValues()  const;
  
  //! checks, and correct as necessary, the number of property
  //! values. Returns True if corrected, False if already OK
  Standard_EXPORT   Standard_Boolean OwnCorrect() ;
  
  //! returns the property type
  Standard_EXPORT   Standard_Integer PropertyType()  const;
  
  //! returns the number of dependent variables
  Standard_EXPORT   Standard_Integer NbDependents()  const;
  
  //! returns the number of independent variables
  Standard_EXPORT   Standard_Integer NbIndependents()  const;
  
  //! returns the type of the num'th independent variable
  //! raises exception if num <= 0 or num > NbIndependents()
  Standard_EXPORT   Standard_Integer TypeOfIndependents (const Standard_Integer num)  const;
  
  //! returns the number of different values of the num'th indep. variable
  //! raises exception if num <= 0 or num > NbIndependents()
  Standard_EXPORT   Standard_Integer NbValues (const Standard_Integer num)  const;
  
  Standard_EXPORT   Standard_Real IndependentValue (const Standard_Integer variablenum, const Standard_Integer valuenum)  const;
  
  Standard_EXPORT   Handle(TColStd_HArray1OfReal) DependentValues (const Standard_Integer num)  const;
  
  Standard_EXPORT   Standard_Real DependentValue (const Standard_Integer variablenum, const Standard_Integer valuenum)  const;




  DEFINE_STANDARD_RTTI(IGESDefs_TabularData)

protected:




private: 


  Standard_Integer theNbPropertyValues;
  Standard_Integer thePropertyType;
  Handle(TColStd_HArray1OfInteger) theTypeOfIndependentVariables;
  Handle(TColStd_HArray1OfInteger) theNbValues;
  Handle(IGESBasic_HArray1OfHArray1OfReal) theIndependentValues;
  Handle(IGESBasic_HArray1OfHArray1OfReal) theDependentValues;


};







#endif // _IGESDefs_TabularData_HeaderFile
