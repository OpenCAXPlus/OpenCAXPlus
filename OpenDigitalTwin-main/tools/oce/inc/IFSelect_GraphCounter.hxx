// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IFSelect_GraphCounter_HeaderFile
#define _IFSelect_GraphCounter_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_IFSelect_GraphCounter.hxx>

#include <Handle_IFSelect_SelectDeduct.hxx>
#include <IFSelect_SignCounter.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_TColStd_HSequenceOfTransient.hxx>
class IFSelect_SelectDeduct;
class TColStd_HSequenceOfTransient;
class Interface_Graph;


//! A GraphCounter computes values to be sorted with the help of
//! a Graph. I.E. not from a Signature
//!
//! The default GraphCounter works with an Applied Selection (a
//! SelectDeduct), the value is the count of selected entities
//! from each input entities)
class IFSelect_GraphCounter : public IFSelect_SignCounter
{

public:

  
  //! Creates a GraphCounter, without applied selection
  Standard_EXPORT IFSelect_GraphCounter(const Standard_Boolean withmap = Standard_True, const Standard_Boolean withlist = Standard_False);
  
  //! Returns the applied selection
  Standard_EXPORT   Handle(IFSelect_SelectDeduct) Applied()  const;
  
  //! Sets a new applied selection
  Standard_EXPORT   void SetApplied (const Handle(IFSelect_SelectDeduct)& sel) ;
  
  //! Adds a list of entities in the context given by the graph
  //! Default takes the count of entities selected by the applied
  //! selection, when it is given each entity of the list
  //! Can be redefined
  Standard_EXPORT virtual   void AddWithGraph (const Handle(TColStd_HSequenceOfTransient)& list, const Interface_Graph& graph) ;




  DEFINE_STANDARD_RTTI(IFSelect_GraphCounter)

protected:




private: 


  Handle(IFSelect_SelectDeduct) theapplied;


};







#endif // _IFSelect_GraphCounter_HeaderFile
