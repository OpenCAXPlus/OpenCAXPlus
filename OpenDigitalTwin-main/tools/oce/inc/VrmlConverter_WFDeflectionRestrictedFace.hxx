// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _VrmlConverter_WFDeflectionRestrictedFace_HeaderFile
#define _VrmlConverter_WFDeflectionRestrictedFace_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Standard_OStream.hxx>
#include <Handle_BRepAdaptor_HSurface.hxx>
#include <Handle_VrmlConverter_Drawer.hxx>
#include <Standard_Boolean.hxx>
#include <Quantity_Length.hxx>
#include <Standard_Integer.hxx>
class BRepAdaptor_HSurface;
class VrmlConverter_Drawer;


//! WFDeflectionRestrictedFace    -    computes    the
//! wireframe   presentation   of  faces       with
//! restrictions by  displaying  a given  number of  U
//! and/or  V  isoparametric  curves,  converts his
//! into VRML objects   and writes (adds) them  into
//! anOStream.    All   requested properties  of the
//! representation  are  specify in  aDrawer of Drawer
//! class (Prs3d).    This kind  of the presentation
//! is     converted       into   IndexedFaceSet   and
//! IndexedLineSet ( VRML ).
class VrmlConverter_WFDeflectionRestrictedFace 
{
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT static   void Add (Standard_OStream& anOStream, const Handle(BRepAdaptor_HSurface)& aFace, const Handle(VrmlConverter_Drawer)& aDrawer) ;
  
  Standard_EXPORT static   void AddUIso (Standard_OStream& anOStream, const Handle(BRepAdaptor_HSurface)& aFace, const Handle(VrmlConverter_Drawer)& aDrawer) ;
  
  Standard_EXPORT static   void AddVIso (Standard_OStream& anOStream, const Handle(BRepAdaptor_HSurface)& aFace, const Handle(VrmlConverter_Drawer)& aDrawer) ;
  
  Standard_EXPORT static   void Add (Standard_OStream& anOStream, const Handle(BRepAdaptor_HSurface)& aFace, const Standard_Boolean DrawUIso, const Standard_Boolean DrawVIso, const Quantity_Length Deflection, const Standard_Integer NBUiso, const Standard_Integer NBViso, const Handle(VrmlConverter_Drawer)& aDrawer) ;




protected:





private:





};







#endif // _VrmlConverter_WFDeflectionRestrictedFace_HeaderFile
