// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepFill_ShapeLaw_HeaderFile
#define _BRepFill_ShapeLaw_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_BRepFill_ShapeLaw.hxx>

#include <TopoDS_Shape.hxx>
#include <Handle_TopTools_HArray1OfShape.hxx>
#include <Handle_Law_Function.hxx>
#include <Standard_Boolean.hxx>
#include <BRepFill_SectionLaw.hxx>
#include <Handle_GeomFill_SectionLaw.hxx>
#include <GeomAbs_Shape.hxx>
#include <Standard_Integer.hxx>
#include <Standard_Real.hxx>
class TopTools_HArray1OfShape;
class Law_Function;
class TopoDS_Vertex;
class TopoDS_Wire;
class GeomFill_SectionLaw;
class TopoDS_Shape;
class TopoDS_Edge;


//! Build Section Law, with an Vertex, or an Wire
class BRepFill_ShapeLaw : public BRepFill_SectionLaw
{

public:

  
  //! Construct an constant Law
  Standard_EXPORT BRepFill_ShapeLaw(const TopoDS_Vertex& V, const Standard_Boolean Build = Standard_True);
  
  //! Construct an constant Law
  Standard_EXPORT BRepFill_ShapeLaw(const TopoDS_Wire& W, const Standard_Boolean Build = Standard_True);
  
  //! Construct an evolutive Law
  Standard_EXPORT BRepFill_ShapeLaw(const TopoDS_Wire& W, const Handle(Law_Function)& L, const Standard_Boolean Build = Standard_True);
  
  //! Say if the input shape is a  vertex.
  Standard_EXPORT virtual   Standard_Boolean IsVertex()  const;
  
  //! Say if the Law is  Constant.
  Standard_EXPORT virtual   Standard_Boolean IsConstant()  const;
  
  //! Give the law build on a concaneted section
  Standard_EXPORT virtual   Handle(GeomFill_SectionLaw) ConcatenedLaw()  const;
  
  Standard_EXPORT virtual   GeomAbs_Shape Continuity (const Standard_Integer Index, const Standard_Real TolAngular)  const;
  
  Standard_EXPORT virtual   Standard_Real VertexTol (const Standard_Integer Index, const Standard_Real Param)  const;
  
  Standard_EXPORT virtual   TopoDS_Vertex Vertex (const Standard_Integer Index, const Standard_Real Param)  const;
  
  Standard_EXPORT virtual   void D0 (const Standard_Real Param, TopoDS_Shape& S) ;
  
     const  TopoDS_Edge& Edge (const Standard_Integer Index)  const;




  DEFINE_STANDARD_RTTI(BRepFill_ShapeLaw)

protected:


  Standard_Boolean vertex;


private: 

  
  Standard_EXPORT   void Init (const Standard_Boolean B) ;

  TopoDS_Shape myShape;
  Handle(TopTools_HArray1OfShape) myEdges;
  Handle(Law_Function) TheLaw;


};


#include <BRepFill_ShapeLaw.lxx>





#endif // _BRepFill_ShapeLaw_HeaderFile
