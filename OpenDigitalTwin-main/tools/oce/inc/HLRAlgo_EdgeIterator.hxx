// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _HLRAlgo_EdgeIterator_HeaderFile
#define _HLRAlgo_EdgeIterator_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Standard_Integer.hxx>
#include <Standard_Address.hxx>
#include <Standard_Real.hxx>
#include <Standard_ShortReal.hxx>
#include <Standard_Boolean.hxx>
class HLRAlgo_EdgeStatus;



class HLRAlgo_EdgeIterator 
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! Iterator  on the  visible or  hidden  parts of  an
  //! edge.
  Standard_EXPORT HLRAlgo_EdgeIterator();
  
  Standard_EXPORT   void InitHidden (const HLRAlgo_EdgeStatus& status) ;
  
      Standard_Boolean MoreHidden()  const;
  
  Standard_EXPORT   void NextHidden() ;
  
  //! Returns the bounds and the tolerances
  //! of the current Hidden Interval
      void Hidden (Standard_Real& Start, Standard_ShortReal& TolStart, Standard_Real& End, Standard_ShortReal& TolEnd)  const;
  
      void InitVisible (const HLRAlgo_EdgeStatus& status) ;
  
      Standard_Boolean MoreVisible()  const;
  
      void NextVisible() ;
  
  //! Returns the bounds and the tolerances
  //! of the current Visible Interval
      void Visible (Standard_Real& Start, Standard_ShortReal& TolStart, Standard_Real& End, Standard_ShortReal& TolEnd) ;




protected:





private:



  Standard_Integer myNbVis;
  Standard_Integer myNbHid;
  Standard_Address EVis;
  Standard_Address EHid;
  Standard_Integer iVis;
  Standard_Integer iHid;
  Standard_Real myHidStart;
  Standard_Real myHidEnd;
  Standard_ShortReal myHidTolStart;
  Standard_ShortReal myHidTolEnd;


};


#include <HLRAlgo_EdgeIterator.lxx>





#endif // _HLRAlgo_EdgeIterator_HeaderFile
