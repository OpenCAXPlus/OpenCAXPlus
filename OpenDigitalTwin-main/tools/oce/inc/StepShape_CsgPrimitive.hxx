// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StepShape_CsgPrimitive_HeaderFile
#define _StepShape_CsgPrimitive_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <StepData_SelectType.hxx>
#include <Standard_Integer.hxx>
#include <Handle_Standard_Transient.hxx>
#include <Handle_StepShape_Sphere.hxx>
#include <Handle_StepShape_Block.hxx>
#include <Handle_StepShape_RightAngularWedge.hxx>
#include <Handle_StepShape_Torus.hxx>
#include <Handle_StepShape_RightCircularCone.hxx>
#include <Handle_StepShape_RightCircularCylinder.hxx>
class Standard_Transient;
class StepShape_Sphere;
class StepShape_Block;
class StepShape_RightAngularWedge;
class StepShape_Torus;
class StepShape_RightCircularCone;
class StepShape_RightCircularCylinder;



class StepShape_CsgPrimitive  : public StepData_SelectType
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! Returns a CsgPrimitive SelectType
  Standard_EXPORT StepShape_CsgPrimitive();
  
  //! Recognizes a CsgPrimitive Kind Entity that is :
  //! 1 -> Sphere
  //! 2 -> Block
  //! 3 -> RightAngularWedge
  //! 4 -> Torus
  //! 5 -> RightCircularCone
  //! 6 -> RightCircularCylinder
  //! 0 else
  Standard_EXPORT   Standard_Integer CaseNum (const Handle(Standard_Transient)& ent)  const;
  
  //! returns Value as a Sphere (Null if another type)
  Standard_EXPORT   Handle(StepShape_Sphere) Sphere()  const;
  
  //! returns Value as a Block (Null if another type)
  Standard_EXPORT   Handle(StepShape_Block) Block()  const;
  
  //! returns Value as a RightAngularWedge (Null if another type)
  Standard_EXPORT   Handle(StepShape_RightAngularWedge) RightAngularWedge()  const;
  
  //! returns Value as a Torus (Null if another type)
  Standard_EXPORT   Handle(StepShape_Torus) Torus()  const;
  
  //! returns Value as a RightCircularCone (Null if another type)
  Standard_EXPORT   Handle(StepShape_RightCircularCone) RightCircularCone()  const;
  
  //! returns Value as a RightCircularCylinder (Null if another type)
  Standard_EXPORT   Handle(StepShape_RightCircularCylinder) RightCircularCylinder()  const;




protected:





private:





};







#endif // _StepShape_CsgPrimitive_HeaderFile
