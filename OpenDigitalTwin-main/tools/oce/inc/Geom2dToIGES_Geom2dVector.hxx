// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Geom2dToIGES_Geom2dVector_HeaderFile
#define _Geom2dToIGES_Geom2dVector_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Geom2dToIGES_Geom2dEntity.hxx>
#include <Handle_IGESGeom_Direction.hxx>
#include <Handle_Geom2d_Vector.hxx>
#include <Handle_Geom2d_VectorWithMagnitude.hxx>
#include <Handle_Geom2d_Direction.hxx>
class Geom2dToIGES_Geom2dEntity;
class IGESGeom_Direction;
class Geom2d_Vector;
class Geom2d_VectorWithMagnitude;
class Geom2d_Direction;


//! This class implements the transfer of the Vector from Geom2d
//! to IGES . These can be :
//! . Vector
//! * Direction
//! * VectorWithMagnitude
class Geom2dToIGES_Geom2dVector  : public Geom2dToIGES_Geom2dEntity
{
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT Geom2dToIGES_Geom2dVector();
  
  //! Creates a tool Geom2dVector ready to run and sets its
  //! fields as G2dE's.
  Standard_EXPORT Geom2dToIGES_Geom2dVector(const Geom2dToIGES_Geom2dEntity& G2dE);
  
  //! Transfert  a  GeometryEntity which  answer True  to  the
  //! member : BRepToIGES::IsGeomVector(Geometry).  If this
  //! Entity could not be converted, this member returns a NullEntity.
  Standard_EXPORT   Handle(IGESGeom_Direction) Transfer2dVector (const Handle(Geom2d_Vector)& start) ;
  
  Standard_EXPORT   Handle(IGESGeom_Direction) Transfer2dVector (const Handle(Geom2d_VectorWithMagnitude)& start) ;
  
  Standard_EXPORT   Handle(IGESGeom_Direction) Transfer2dVector (const Handle(Geom2d_Direction)& start) ;




protected:





private:





};







#endif // _Geom2dToIGES_Geom2dVector_HeaderFile
