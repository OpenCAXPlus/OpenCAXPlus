// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _math_FunctionSample_HeaderFile
#define _math_FunctionSample_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Standard_Real.hxx>
#include <Standard_Integer.hxx>
class Standard_OutOfRange;


//! This class gives a default sample (constant difference
//! of parameter) for a function defined between
//! two bound A,B.
class math_FunctionSample 
{
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT math_FunctionSample(const Standard_Real A, const Standard_Real B, const Standard_Integer N);
  
  //! Returns the bounds of parameters.
  Standard_EXPORT virtual   void Bounds (Standard_Real& A, Standard_Real& B)  const;
  
  //! Returns the number of sample points.
  Standard_EXPORT   Standard_Integer NbPoints()  const;
  
  //! Returns the value of parameter of the point of
  //! range Index : A + ((Index-1)/(NbPoints-1))*B.
  //! An exception is raised if Index<=0 or Index>NbPoints.
  Standard_EXPORT virtual   Standard_Real GetParameter (const Standard_Integer Index)  const;




protected:





private:



  Standard_Real a;
  Standard_Real b;
  Standard_Integer n;


};







#endif // _math_FunctionSample_HeaderFile
