// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TDataStd_NoteBook_HeaderFile
#define _TDataStd_NoteBook_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_TDataStd_NoteBook.hxx>

#include <TDF_Attribute.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_TDataStd_Real.hxx>
#include <Standard_Real.hxx>
#include <Handle_TDataStd_Integer.hxx>
#include <Standard_Integer.hxx>
#include <Handle_TDF_Attribute.hxx>
#include <Handle_TDF_RelocationTable.hxx>
#include <Standard_OStream.hxx>
class TDF_Label;
class Standard_GUID;
class TDataStd_Real;
class TDataStd_Integer;
class TDF_Attribute;
class TDF_RelocationTable;


//! NoteBook Object attribute
class TDataStd_NoteBook : public TDF_Attribute
{

public:

  
  //! class methods
  //! =============
  //! try to retrieve a NoteBook attribute at <current> label
  //! or in  fathers  label of  <current>. Returns True  if
  //! found and set <N>.
  Standard_EXPORT static   Standard_Boolean Find (const TDF_Label& current, Handle(TDataStd_NoteBook)& N) ;
  
  //! Create  an  enpty   NoteBook attribute,  located  at
  //! <label>. Raises if <label> has attribute
  Standard_EXPORT static   Handle(TDataStd_NoteBook) New (const TDF_Label& label) ;
  
  //! NoteBook methods
  //! ===============
  Standard_EXPORT static  const  Standard_GUID& GetID() ;
  
  Standard_EXPORT TDataStd_NoteBook();
  
  //! Tool to Create  an  Integer  attribute from  <value>,
  //! Insert it in   a  new son  label   of <me>. The   Real
  //! attribute is returned.
  Standard_EXPORT   Handle(TDataStd_Real) Append (const Standard_Real value, const Standard_Boolean isExported = Standard_False) ;
  
  //! Tool to Create  an Real attribute from <value>, Insert
  //! it  in a new son label  of <me>. The Integer attribute
  //! is returned.
  Standard_EXPORT   Handle(TDataStd_Integer) Append (const Standard_Integer value, const Standard_Boolean isExported = Standard_False) ;
  
  Standard_EXPORT  const  Standard_GUID& ID()  const;
  
  Standard_EXPORT   void Restore (const Handle(TDF_Attribute)& with) ;
  
  Standard_EXPORT   Handle(TDF_Attribute) NewEmpty()  const;
  
  Standard_EXPORT   void Paste (const Handle(TDF_Attribute)& into, const Handle(TDF_RelocationTable)& RT)  const;
  
  Standard_EXPORT virtual   Standard_OStream& Dump (Standard_OStream& anOS)  const;




  DEFINE_STANDARD_RTTI(TDataStd_NoteBook)

protected:




private: 




};







#endif // _TDataStd_NoteBook_HeaderFile
