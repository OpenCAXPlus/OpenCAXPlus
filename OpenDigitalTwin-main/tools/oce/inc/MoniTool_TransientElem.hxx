// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _MoniTool_TransientElem_HeaderFile
#define _MoniTool_TransientElem_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_MoniTool_TransientElem.hxx>

#include <Handle_Standard_Transient.hxx>
#include <MoniTool_Element.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_MoniTool_Element.hxx>
#include <Handle_Standard_Type.hxx>
#include <Standard_CString.hxx>
class Standard_Transient;
class MoniTool_Element;
class Standard_Type;


//! an TransientElem defines an Element for a specific input class
//! its definition includes the value of the Key to be mapped,
//! and the HashCoder associated to the class of the Key
//!
//! Transient from Standard defines the class to be keyed
//! MapTransientHasher from TColStd is the associated Hasher
//! DataInfo from MoniTool   is an additionnal class which helps to provide
//! informations on the value (template : see DataInfo)
class MoniTool_TransientElem : public MoniTool_Element
{

public:

  
  //! Creates a TransientElem with a Value. This Value can then not be
  //! changed. It is used by the Hasher to compute the HashCode,
  //! which will then be stored for an immediate reading.
  Standard_EXPORT MoniTool_TransientElem(const Handle(Standard_Transient)& akey);
  
  //! Returns the contained value
  Standard_EXPORT  const  Handle(Standard_Transient)& Value()  const;
  
  //! Specific testof equallity : defined as False if <other> has
  //! not the same true Type, else contents are compared (by
  //! C++ operator ==)
  Standard_EXPORT   Standard_Boolean Equates (const Handle(MoniTool_Element)& other)  const;
  
  //! Returns the Type of the Value. By default, returns the
  //! DynamicType of <me>, but can be redefined
  Standard_EXPORT virtual   Handle(Standard_Type) ValueType()  const;
  
  //! Returns the name of the Type of the Value. Default is name
  //! of ValueType, unless it is for a non-handled object
  Standard_EXPORT virtual   Standard_CString ValueTypeName()  const;




  DEFINE_STANDARD_RTTI(MoniTool_TransientElem)

protected:




private: 


  Handle(Standard_Transient) theval;


};







#endif // _MoniTool_TransientElem_HeaderFile
