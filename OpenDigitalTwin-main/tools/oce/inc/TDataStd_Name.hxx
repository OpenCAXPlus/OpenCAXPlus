// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TDataStd_Name_HeaderFile
#define _TDataStd_Name_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_TDataStd_Name.hxx>

#include <TCollection_ExtendedString.hxx>
#include <TDF_Attribute.hxx>
#include <Handle_TDF_Attribute.hxx>
#include <Handle_TDF_RelocationTable.hxx>
#include <Standard_OStream.hxx>
class Standard_DomainError;
class Standard_GUID;
class TDF_Label;
class TCollection_ExtendedString;
class TDF_Attribute;
class TDF_RelocationTable;


//! Used to define a name attribute containing a string which specifies the name.
class TDataStd_Name : public TDF_Attribute
{

public:

  
  //! class methods working on the name itself
  //! ========================================
  //! Returns the GUID for name attributes.
  Standard_EXPORT static  const  Standard_GUID& GetID() ;
  
  //! Creates (if does not exist) and sets the name in the name attribute.
  //! from any label <L>  search in father  labels (L is not
  //! concerned) the first name attribute.if found set it in
  //! <father>.
  //! class methods working on the name tree
  //! ======================================
  //! Search in the  whole TDF_Data the Name attribute which
  //! fit with <fullPath>. Returns True if found.
  //! Search  under <currentLabel>  a  label which fit with
  //! <name>. Returns True if  found. Shortcut which  avoids
  //! building a ListOfExtendedStrin.
  //! Search in the whole TDF_Data the label which fit with name
  //! Returns True if found.
  //! tools methods to translate path <-> pathlist
  //! ===========================================
  //! move to draw For Draw test we may provide this tool method which convert a path in a
  //! sequence of string to call after the FindLabel methods.
  //! Example: if it's given "Assembly:Part_1:Sketch_5" it will return in <pathlist>
  //! the list of 3 strings: "Assembly","Part_1","Sketch_5".
  //! move to draw from <pathlist> build the string path
  //! Name methods
  //! ============
  Standard_EXPORT static   Handle(TDataStd_Name) Set (const TDF_Label& label, const TCollection_ExtendedString& string) ;
  
  Standard_EXPORT TDataStd_Name();
  
  //! Sets <S> as name. Raises if <S> is not a valid name.
  Standard_EXPORT   void Set (const TCollection_ExtendedString& S) ;
  

  //! Returns the name contained in this name attribute.
  Standard_EXPORT  const  TCollection_ExtendedString& Get()  const;
  
  Standard_EXPORT  const  Standard_GUID& ID()  const;
  
  Standard_EXPORT   void Restore (const Handle(TDF_Attribute)& with) ;
  
  Standard_EXPORT   Handle(TDF_Attribute) NewEmpty()  const;
  
  Standard_EXPORT   void Paste (const Handle(TDF_Attribute)& into, const Handle(TDF_RelocationTable)& RT)  const;
  
  Standard_EXPORT virtual   Standard_OStream& Dump (Standard_OStream& anOS)  const;




  DEFINE_STANDARD_RTTI(TDataStd_Name)

protected:




private: 


  TCollection_ExtendedString myString;


};







#endif // _TDataStd_Name_HeaderFile
