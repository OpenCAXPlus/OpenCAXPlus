// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Transfer_BinderOfTransientInteger_HeaderFile
#define _Transfer_BinderOfTransientInteger_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_Transfer_BinderOfTransientInteger.hxx>

#include <Standard_Integer.hxx>
#include <Transfer_SimpleBinderOfTransient.hxx>


//! This type of Binder allows to attach as result, besides a
//! Transient Object, an Integer Value, which can be an Index
//! in the Object if it defines a List, for instance
//!
//! This Binder is otherwise a kind of SimpleBinderOfTransient,
//! i.e. its basic result (for iterators, etc) is the Transient
class Transfer_BinderOfTransientInteger : public Transfer_SimpleBinderOfTransient
{

public:

  
  //! Creates an empty BinderOfTransientInteger; Default value for
  //! the integer part is zero
  Standard_EXPORT Transfer_BinderOfTransientInteger();
  
  //! Sets a value for the integer part
  Standard_EXPORT   void SetInteger (const Standard_Integer value) ;
  
  //! Returns the value set for the integer part
  Standard_EXPORT   Standard_Integer Integer()  const;




  DEFINE_STANDARD_RTTI(Transfer_BinderOfTransientInteger)

protected:




private: 


  Standard_Integer theintval;


};







#endif // _Transfer_BinderOfTransientInteger_HeaderFile
