// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESToBRep_Actor_HeaderFile
#define _IGESToBRep_Actor_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_IGESToBRep_Actor.hxx>

#include <Handle_Interface_InterfaceModel.hxx>
#include <Standard_Integer.hxx>
#include <Standard_Real.hxx>
#include <Transfer_ActorOfTransientProcess.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_Standard_Transient.hxx>
#include <Handle_Transfer_Binder.hxx>
#include <Handle_Transfer_TransientProcess.hxx>
class Interface_InterfaceModel;
class Standard_Transient;
class Transfer_Binder;
class Transfer_TransientProcess;


//! This class performs the transfer of an Entity from
//! IGESToBRep
//!
//! I.E. for each type of Entity, it invokes the appropriate Tool
//! then returns the Binder which contains the Result
class IGESToBRep_Actor : public Transfer_ActorOfTransientProcess
{

public:

  
  Standard_EXPORT IGESToBRep_Actor();
  
  Standard_EXPORT   void SetModel (const Handle(Interface_InterfaceModel)& model) ;
  
  //! ---Purpose   By default continuity = 0
  //! if continuity = 1 : try C1
  //! if continuity = 2 : try C2
  Standard_EXPORT   void SetContinuity (const Standard_Integer continuity = 0) ;
  
  //! Return "thecontinuity"
  Standard_EXPORT   Standard_Integer GetContinuity()  const;
  
  Standard_EXPORT virtual   Standard_Boolean Recognize (const Handle(Standard_Transient)& start) ;
  
  Standard_EXPORT virtual   Handle(Transfer_Binder) Transfer (const Handle(Standard_Transient)& start, const Handle(Transfer_TransientProcess)& TP) ;
  
  //! Returns the tolerance which was actually used, either from
  //! the file or from statics
  Standard_EXPORT   Standard_Real UsedTolerance()  const;




  DEFINE_STANDARD_RTTI(IGESToBRep_Actor)

protected:




private: 


  Handle(Interface_InterfaceModel) themodel;
  Standard_Integer thecontinuity;
  Standard_Real theeps;


};







#endif // _IGESToBRep_Actor_HeaderFile
