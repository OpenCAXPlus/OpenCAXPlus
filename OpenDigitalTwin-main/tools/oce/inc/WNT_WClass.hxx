// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _WNT_WClass_HeaderFile
#define _WNT_WClass_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_WNT_WClass.hxx>

#include <Standard_CString.hxx>
#include <Aspect_Handle.hxx>
#include <Standard_Address.hxx>
#include <MMgt_TShared.hxx>
#include <WNT_Uint.hxx>
#include <Standard_Integer.hxx>
class WNT_ClassDefinitionError;
class WNT_Window;


//! This class defines a Windows NT window class.
//! A window in Windows NT is always created based on a
//! window class. The window class identifies the window
//! procedure that processes messages to the window. Each
//! window class has unique name ( character string ). More
//! than one window can be created based on a single window
//! class. For example, all button windows in Windows NT
//! are created based on the same window class. The window
//! class defines the window procedure and some other
//! characteristics ( background, mouse cursor shape etc. )
//! of the windows that are created based on that class.
//! When we create a window, we define additional
//! characteristics of the window that are unique to that
//! window. So, we have to create and register window
//! class before creation of any window. Of course, it's possible
//! to create a new window class for each window inside
//! the Window class and do not use the WClass at all.
//! We implemented this class for sake of flexibility of
//! event processing.
class WNT_WClass : public MMgt_TShared
{

public:

  
  //! Creates a Windows NT window class and registers it.
  Standard_EXPORT WNT_WClass(const Standard_CString aClassName, const Standard_Address aWndProc, const WNT_Uint& aStyle, const Standard_Integer aClassExtra = 0, const Standard_Integer aWindowExtra = 0, const Aspect_Handle aCursor = 0, const Aspect_Handle anIcon = 0, const Standard_CString aMenuName = 0);
  
  //! Destroys all resources attached to the class
  Standard_EXPORT virtual   void Destroy() ;
~WNT_WClass()
{
  Destroy();
}
  
  //! Returns address of window procedure.
      Standard_Address WndProc()  const;
  
  //! Returns a class name.
      Standard_CString Name()  const;
  
  //! Returns a program instance handle.
      Aspect_Handle Instance()  const;

friend class WNT_Window;


  DEFINE_STANDARD_RTTI(WNT_WClass)

protected:


  Standard_CString lpszName;
  Aspect_Handle hInstance;
  Standard_Address lpfnWndProc;


private: 




};


#include <WNT_WClass.lxx>





#endif // _WNT_WClass_HeaderFile
