// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _NLPlate_SequenceOfHGPPConstraint_HeaderFile
#define _NLPlate_SequenceOfHGPPConstraint_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <TCollection_BaseSequence.hxx>
#include <Handle_NLPlate_HGPPConstraint.hxx>
#include <Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint.hxx>
#include <Standard_Integer.hxx>
class Standard_NoSuchObject;
class Standard_OutOfRange;
class NLPlate_HGPPConstraint;
class NLPlate_SequenceNodeOfSequenceOfHGPPConstraint;



class NLPlate_SequenceOfHGPPConstraint  : public TCollection_BaseSequence
{
public:

  DEFINE_STANDARD_ALLOC

  
    NLPlate_SequenceOfHGPPConstraint();
  
  Standard_EXPORT NLPlate_SequenceOfHGPPConstraint(const NLPlate_SequenceOfHGPPConstraint& Other);
  
  Standard_EXPORT   void Clear() ;
~NLPlate_SequenceOfHGPPConstraint()
{
  Clear();
}
  
  Standard_EXPORT  const  NLPlate_SequenceOfHGPPConstraint& Assign (const NLPlate_SequenceOfHGPPConstraint& Other) ;
 const  NLPlate_SequenceOfHGPPConstraint& operator = (const NLPlate_SequenceOfHGPPConstraint& Other) 
{
  return Assign(Other);
}
  
  Standard_EXPORT   void Append (const Handle(NLPlate_HGPPConstraint)& T) ;
  
      void Append (NLPlate_SequenceOfHGPPConstraint& S) ;
  
  Standard_EXPORT   void Prepend (const Handle(NLPlate_HGPPConstraint)& T) ;
  
      void Prepend (NLPlate_SequenceOfHGPPConstraint& S) ;
  
      void InsertBefore (const Standard_Integer Index, const Handle(NLPlate_HGPPConstraint)& T) ;
  
      void InsertBefore (const Standard_Integer Index, NLPlate_SequenceOfHGPPConstraint& S) ;
  
  Standard_EXPORT   void InsertAfter (const Standard_Integer Index, const Handle(NLPlate_HGPPConstraint)& T) ;
  
      void InsertAfter (const Standard_Integer Index, NLPlate_SequenceOfHGPPConstraint& S) ;
  
  Standard_EXPORT  const  Handle(NLPlate_HGPPConstraint)& First()  const;
  
  Standard_EXPORT  const  Handle(NLPlate_HGPPConstraint)& Last()  const;
  
      void Split (const Standard_Integer Index, NLPlate_SequenceOfHGPPConstraint& Sub) ;
  
  Standard_EXPORT  const  Handle(NLPlate_HGPPConstraint)& Value (const Standard_Integer Index)  const;
 const  Handle(NLPlate_HGPPConstraint)& operator() (const Standard_Integer Index)  const
{
  return Value(Index);
}
  
  Standard_EXPORT   void SetValue (const Standard_Integer Index, const Handle(NLPlate_HGPPConstraint)& I) ;
  
  Standard_EXPORT   Handle(NLPlate_HGPPConstraint)& ChangeValue (const Standard_Integer Index) ;
  Handle(NLPlate_HGPPConstraint)& operator() (const Standard_Integer Index) 
{
  return ChangeValue(Index);
}
  
  Standard_EXPORT   void Remove (const Standard_Integer Index) ;
  
  Standard_EXPORT   void Remove (const Standard_Integer FromIndex, const Standard_Integer ToIndex) ;




protected:





private:





};

#define SeqItem Handle(NLPlate_HGPPConstraint)
#define SeqItem_hxx <NLPlate_HGPPConstraint.hxx>
#define TCollection_SequenceNode NLPlate_SequenceNodeOfSequenceOfHGPPConstraint
#define TCollection_SequenceNode_hxx <NLPlate_SequenceNodeOfSequenceOfHGPPConstraint.hxx>
#define Handle_TCollection_SequenceNode Handle_NLPlate_SequenceNodeOfSequenceOfHGPPConstraint
#define TCollection_SequenceNode_Type_() NLPlate_SequenceNodeOfSequenceOfHGPPConstraint_Type_()
#define TCollection_Sequence NLPlate_SequenceOfHGPPConstraint
#define TCollection_Sequence_hxx <NLPlate_SequenceOfHGPPConstraint.hxx>

#include <TCollection_Sequence.lxx>

#undef SeqItem
#undef SeqItem_hxx
#undef TCollection_SequenceNode
#undef TCollection_SequenceNode_hxx
#undef Handle_TCollection_SequenceNode
#undef TCollection_SequenceNode_Type_
#undef TCollection_Sequence
#undef TCollection_Sequence_hxx




#endif // _NLPlate_SequenceOfHGPPConstraint_HeaderFile
