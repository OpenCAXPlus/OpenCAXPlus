// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepCheck_Edge_HeaderFile
#define _BRepCheck_Edge_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_BRepCheck_Edge.hxx>

#include <Handle_BRep_CurveRepresentation.hxx>
#include <Handle_Adaptor3d_HCurve.hxx>
#include <Standard_Boolean.hxx>
#include <BRepCheck_Result.hxx>
#include <Standard_Real.hxx>
#include <BRepCheck_Status.hxx>
class BRep_CurveRepresentation;
class Adaptor3d_HCurve;
class TopoDS_Edge;
class TopoDS_Shape;



class BRepCheck_Edge : public BRepCheck_Result
{

public:

  
  Standard_EXPORT BRepCheck_Edge(const TopoDS_Edge& E);
  
  Standard_EXPORT   void InContext (const TopoDS_Shape& ContextShape) ;
  
  Standard_EXPORT   void Minimum() ;
  
  Standard_EXPORT   void Blind() ;
  
  Standard_EXPORT   Standard_Boolean GeometricControls()  const;
  
  Standard_EXPORT   void GeometricControls (const Standard_Boolean B) ;
  
  Standard_EXPORT   Standard_Real Tolerance() ;
  
  //! Sets status of Edge;
  Standard_EXPORT   void SetStatus (const BRepCheck_Status theStatus) ;
  
  //! Checks, if polygon on triangulation of heEdge
  //! is out of 3D-curve of this edge.
  Standard_EXPORT   BRepCheck_Status CheckPolygonOnTriangulation (const TopoDS_Edge& theEdge) ;




  DEFINE_STANDARD_RTTI(BRepCheck_Edge)

protected:




private: 


  Handle(BRep_CurveRepresentation) myCref;
  Handle(Adaptor3d_HCurve) myHCurve;
  Standard_Boolean myGctrl;


};







#endif // _BRepCheck_Edge_HeaderFile
