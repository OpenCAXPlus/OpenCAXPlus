// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _AppDef_BSpParFunctionOfMyBSplGradientOfBSplineCompute_HeaderFile
#define _AppDef_BSpParFunctionOfMyBSplGradientOfBSplineCompute_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Standard_Boolean.hxx>
#include <AppDef_MultiLine.hxx>
#include <AppParCurves_MultiBSpCurve.hxx>
#include <Standard_Integer.hxx>
#include <math_Vector.hxx>
#include <Standard_Real.hxx>
#include <math_Matrix.hxx>
#include <AppDef_BSpParLeastSquareOfMyBSplGradientOfBSplineCompute.hxx>
#include <Handle_TColStd_HArray1OfInteger.hxx>
#include <Handle_AppParCurves_HArray1OfConstraintCouple.hxx>
#include <math_MultipleVarFunctionWithGradient.hxx>
#include <math_IntegerVector.hxx>
#include <AppParCurves_Constraint.hxx>
class TColStd_HArray1OfInteger;
class AppParCurves_HArray1OfConstraintCouple;
class AppDef_MultiLine;
class AppDef_MyLineTool;
class AppDef_BSpParLeastSquareOfMyBSplGradientOfBSplineCompute;
class TColStd_Array1OfReal;
class TColStd_Array1OfInteger;
class AppParCurves_MultiBSpCurve;
class math_Matrix;



class AppDef_BSpParFunctionOfMyBSplGradientOfBSplineCompute  : public math_MultipleVarFunctionWithGradient
{
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT AppDef_BSpParFunctionOfMyBSplGradientOfBSplineCompute(const AppDef_MultiLine& SSP, const Standard_Integer FirstPoint, const Standard_Integer LastPoint, const Handle(AppParCurves_HArray1OfConstraintCouple)& TheConstraints, const math_Vector& Parameters, const TColStd_Array1OfReal& Knots, const TColStd_Array1OfInteger& Mults, const Standard_Integer NbPol);
  
  Standard_EXPORT   Standard_Integer NbVariables()  const;
  
  Standard_EXPORT   Standard_Boolean Value (const math_Vector& X, Standard_Real& F) ;
  
  Standard_EXPORT   Standard_Boolean Gradient (const math_Vector& X, math_Vector& G) ;
  
  Standard_EXPORT   Standard_Boolean Values (const math_Vector& X, Standard_Real& F, math_Vector& G) ;
  
  Standard_EXPORT  const  math_Vector& NewParameters()  const;
  
  Standard_EXPORT   AppParCurves_MultiBSpCurve CurveValue() ;
  
  Standard_EXPORT   Standard_Real Error (const Standard_Integer IPoint, const Standard_Integer CurveIndex) ;
  
  Standard_EXPORT   Standard_Real MaxError3d()  const;
  
  Standard_EXPORT   Standard_Real MaxError2d()  const;
  
  Standard_EXPORT  const  math_Matrix& FunctionMatrix()  const;
  
  Standard_EXPORT  const  math_Matrix& DerivativeFunctionMatrix()  const;
  
  Standard_EXPORT  const  math_IntegerVector& Index()  const;
  
  Standard_EXPORT   AppParCurves_Constraint FirstConstraint (const Handle(AppParCurves_HArray1OfConstraintCouple)& TheConstraints, const Standard_Integer FirstPoint)  const;
  
  Standard_EXPORT   AppParCurves_Constraint LastConstraint (const Handle(AppParCurves_HArray1OfConstraintCouple)& TheConstraints, const Standard_Integer LastPoint)  const;
  
  Standard_EXPORT   void SetFirstLambda (const Standard_Real l1) ;
  
  Standard_EXPORT   void SetLastLambda (const Standard_Real l2) ;




protected:

  
  Standard_EXPORT   void Perform (const math_Vector& X) ;




private:



  Standard_Boolean Done;
  AppDef_MultiLine MyMultiLine;
  AppParCurves_MultiBSpCurve MyMultiBSpCurve;
  Standard_Integer nbpoles;
  math_Vector myParameters;
  Standard_Real FVal;
  math_Vector ValGrad_F;
  math_Matrix MyF;
  math_Matrix PTLX;
  math_Matrix PTLY;
  math_Matrix PTLZ;
  math_Matrix A;
  math_Matrix DA;
  AppDef_BSpParLeastSquareOfMyBSplGradientOfBSplineCompute MyLeastSquare;
  Standard_Boolean Contraintes;
  Standard_Integer NbP;
  Standard_Integer NbCu;
  Standard_Integer Adeb;
  Standard_Integer Afin;
  Handle(TColStd_HArray1OfInteger) tabdim;
  Standard_Real ERR3d;
  Standard_Real ERR2d;
  Standard_Integer FirstP;
  Standard_Integer LastP;
  Handle(AppParCurves_HArray1OfConstraintCouple) myConstraints;
  Standard_Real mylambda1;
  Standard_Real mylambda2;


};







#endif // _AppDef_BSpParFunctionOfMyBSplGradientOfBSplineCompute_HeaderFile
