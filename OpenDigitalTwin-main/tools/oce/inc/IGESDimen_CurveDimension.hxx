// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESDimen_CurveDimension_HeaderFile
#define _IGESDimen_CurveDimension_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_IGESDimen_CurveDimension.hxx>

#include <Handle_IGESDimen_GeneralNote.hxx>
#include <Handle_IGESData_IGESEntity.hxx>
#include <Handle_IGESDimen_LeaderArrow.hxx>
#include <Handle_IGESDimen_WitnessLine.hxx>
#include <IGESData_IGESEntity.hxx>
#include <Standard_Boolean.hxx>
class IGESDimen_GeneralNote;
class IGESData_IGESEntity;
class IGESDimen_LeaderArrow;
class IGESDimen_WitnessLine;


//! defines CurveDimension, Type <204> Form <0>
//! in package IGESDimen
//! Used to dimension curves
//! Consists of one tail segment of nonzero length
//! beginning with an arrowhead and which serves to define
//! the orientation
class IGESDimen_CurveDimension : public IGESData_IGESEntity
{

public:

  
  Standard_EXPORT IGESDimen_CurveDimension();
  
  //! This method is used to set the fields of the class
  //! CurveDimension
  //! - aNote         : General Note Entity
  //! - aCurve        : First Curve Entity
  //! - anotherCurve  : Second Curve Entity or a Null Handle
  //! - aLeader       : First Leader Entity
  //! - anotherLeader : Second Leader Entity
  //! - aLine         : First Witness Line Entity or a Null
  //! Handle
  //! - anotherLine   : Second Witness Line Entity or a Null
  //! Handle
  Standard_EXPORT   void Init (const Handle(IGESDimen_GeneralNote)& aNote, const Handle(IGESData_IGESEntity)& aCurve, const Handle(IGESData_IGESEntity)& anotherCurve, const Handle(IGESDimen_LeaderArrow)& aLeader, const Handle(IGESDimen_LeaderArrow)& anotherLeader, const Handle(IGESDimen_WitnessLine)& aLine, const Handle(IGESDimen_WitnessLine)& anotherLine) ;
  
  //! returns the General Note Entity
  Standard_EXPORT   Handle(IGESDimen_GeneralNote) Note()  const;
  
  //! returns the First curve Entity
  Standard_EXPORT   Handle(IGESData_IGESEntity) FirstCurve()  const;
  
  //! returns False if theSecondCurve is a Null Handle.
  Standard_EXPORT   Standard_Boolean HasSecondCurve()  const;
  
  //! returns the Second curve Entity or a Null Handle.
  Standard_EXPORT   Handle(IGESData_IGESEntity) SecondCurve()  const;
  
  //! returns the First Leader Entity
  Standard_EXPORT   Handle(IGESDimen_LeaderArrow) FirstLeader()  const;
  
  //! returns the Second Leader Entity
  Standard_EXPORT   Handle(IGESDimen_LeaderArrow) SecondLeader()  const;
  
  //! returns False if theFirstWitnessLine is a Null Handle.
  Standard_EXPORT   Standard_Boolean HasFirstWitnessLine()  const;
  
  //! returns the First Witness Line Entity or a Null Handle.
  Standard_EXPORT   Handle(IGESDimen_WitnessLine) FirstWitnessLine()  const;
  
  //! returns False if theSecondWitnessLine is a Null Handle.
  Standard_EXPORT   Standard_Boolean HasSecondWitnessLine()  const;
  
  //! returns the Second Witness Line Entity or a Null Handle.
  Standard_EXPORT   Handle(IGESDimen_WitnessLine) SecondWitnessLine()  const;




  DEFINE_STANDARD_RTTI(IGESDimen_CurveDimension)

protected:




private: 


  Handle(IGESDimen_GeneralNote) theNote;
  Handle(IGESData_IGESEntity) theFirstCurve;
  Handle(IGESData_IGESEntity) theSecondCurve;
  Handle(IGESDimen_LeaderArrow) theFirstLeader;
  Handle(IGESDimen_LeaderArrow) theSecondLeader;
  Handle(IGESDimen_WitnessLine) theFirstWitnessLine;
  Handle(IGESDimen_WitnessLine) theSecondWitnessLine;


};







#endif // _IGESDimen_CurveDimension_HeaderFile
