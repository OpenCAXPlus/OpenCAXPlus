// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IFSelect_SelectionIterator_HeaderFile
#define _IFSelect_SelectionIterator_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Standard_Integer.hxx>
#include <Handle_IFSelect_HSeqOfSelection.hxx>
#include <Handle_IFSelect_Selection.hxx>
#include <Standard_Boolean.hxx>
class IFSelect_HSeqOfSelection;
class Standard_NoSuchObject;
class IFSelect_Selection;
class IFSelect_TSeqOfSelection;


//! Defines an Iterator on a list of Selections
class IFSelect_SelectionIterator 
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! Creates an empty iterator, ready to be filled
  Standard_EXPORT IFSelect_SelectionIterator();
  
  //! Creates an iterator from a Selection : it lists the Selections
  //! from which <sel> depends (given by its method FillIterator)
  Standard_EXPORT IFSelect_SelectionIterator(const Handle(IFSelect_Selection)& sel);
  
  //! Adds to an iterator the content of another one
  //! (each selection is present only once in the result)
  Standard_EXPORT   void AddFromIter (IFSelect_SelectionIterator& iter) ;
  
  //! Adds a Selection to an iterator (if not yet noted)
  Standard_EXPORT   void AddItem (const Handle(IFSelect_Selection)& sel) ;
  
  //! Adds a list of Selections to an iterator (this list comes
  //! from the description of a Selection or a Dispatch, etc...)
  Standard_EXPORT   void AddList (const IFSelect_TSeqOfSelection& list) ;
  
  //! Returns True if there are more Selections to get
  Standard_EXPORT   Standard_Boolean More()  const;
  
  //! Sets iterator to the next item
  Standard_EXPORT   void Next() ;
  
  //! Returns the current Selction beeing iterated
  //! Error if count of Selection has been passed
  Standard_EXPORT  const  Handle(IFSelect_Selection)& Value()  const;




protected:





private:



  Standard_Integer thecurr;
  Handle(IFSelect_HSeqOfSelection) thelist;


};







#endif // _IFSelect_SelectionIterator_HeaderFile
