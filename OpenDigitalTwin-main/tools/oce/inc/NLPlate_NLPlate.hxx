// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _NLPlate_NLPlate_HeaderFile
#define _NLPlate_NLPlate_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Handle_Geom_Surface.hxx>
#include <NLPlate_SequenceOfHGPPConstraint.hxx>
#include <NLPlate_StackOfPlate.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_NLPlate_HGPPConstraint.hxx>
#include <Standard_Integer.hxx>
#include <Standard_Real.hxx>
class Geom_Surface;
class NLPlate_HGPPConstraint;
class gp_XYZ;
class gp_XY;



class NLPlate_NLPlate 
{
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT NLPlate_NLPlate(const Handle(Geom_Surface)& InitialSurface);
  
  Standard_EXPORT   void Load (const Handle(NLPlate_HGPPConstraint)& GConst) ;
  
  Standard_EXPORT   void Solve (const Standard_Integer ord = 2, const Standard_Integer InitialConsraintOrder = 1) ;
  
  Standard_EXPORT   void Solve2 (const Standard_Integer ord = 2, const Standard_Integer InitialConsraintOrder = 1) ;
  
  Standard_EXPORT   void IncrementalSolve (const Standard_Integer ord = 2, const Standard_Integer InitialConsraintOrder = 1, const Standard_Integer NbIncrements = 4, const Standard_Boolean UVSliding = Standard_False) ;
  
  //! returns True if all has been correctly done.
  Standard_EXPORT   Standard_Boolean IsDone()  const;
  
  Standard_EXPORT   void destroy() ;
~NLPlate_NLPlate()
{
  destroy();
}
  
  //! reset the Plate in the initial state
  //! ( same as after Create((Surface))
  Standard_EXPORT   void Init() ;
  
  Standard_EXPORT   gp_XYZ Evaluate (const gp_XY& point2d)  const;
  
  Standard_EXPORT   gp_XYZ EvaluateDerivative (const gp_XY& point2d, const Standard_Integer iu, const Standard_Integer iv)  const;
  
  Standard_EXPORT   Standard_Integer Continuity()  const;
  
  Standard_EXPORT   void ConstraintsSliding (const Standard_Integer NbIterations = 3) ;
  
  Standard_EXPORT   Standard_Integer MaxActiveConstraintOrder()  const;




protected:





private:

  
  Standard_EXPORT   Standard_Boolean Iterate (const Standard_Integer ConstraintOrder, const Standard_Integer ResolutionOrder, const Standard_Real IncrementalLoading = 1.0) ;


  Handle(Geom_Surface) myInitialSurface;
  NLPlate_SequenceOfHGPPConstraint myHGPPConstraints;
  NLPlate_StackOfPlate mySOP;
  Standard_Boolean OK;


};







#endif // _NLPlate_NLPlate_HeaderFile
