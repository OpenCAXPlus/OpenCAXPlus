// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _ShapeUpgrade_EdgeDivide_HeaderFile
#define _ShapeUpgrade_EdgeDivide_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_ShapeUpgrade_EdgeDivide.hxx>

#include <TopoDS_Face.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_TColStd_HSequenceOfReal.hxx>
#include <Handle_ShapeUpgrade_SplitCurve3d.hxx>
#include <Handle_ShapeUpgrade_SplitCurve2d.hxx>
#include <ShapeUpgrade_Tool.hxx>
class TColStd_HSequenceOfReal;
class ShapeUpgrade_SplitCurve3d;
class ShapeUpgrade_SplitCurve2d;
class TopoDS_Face;
class TopoDS_Edge;



class ShapeUpgrade_EdgeDivide : public ShapeUpgrade_Tool
{

public:

  
  //! Empty constructor
  Standard_EXPORT ShapeUpgrade_EdgeDivide();
  
  Standard_EXPORT   void Clear() ;
  
  //! Sets supporting surface by face
      void SetFace (const TopoDS_Face& F) ;
  
  Standard_EXPORT virtual   Standard_Boolean Compute (const TopoDS_Edge& E) ;
  
      Standard_Boolean HasCurve2d()  const;
  
      Standard_Boolean HasCurve3d()  const;
  
      Handle(TColStd_HSequenceOfReal) Knots2d()  const;
  
      Handle(TColStd_HSequenceOfReal) Knots3d()  const;
  
  //! Sets the tool for splitting pcurves.
  Standard_EXPORT   void SetSplitCurve2dTool (const Handle(ShapeUpgrade_SplitCurve2d)& splitCurve2dTool) ;
  
  //! Sets the tool for splitting 3D curves.
  Standard_EXPORT   void SetSplitCurve3dTool (const Handle(ShapeUpgrade_SplitCurve3d)& splitCurve3dTool) ;
  
  //! Returns the tool for splitting pcurves.
  Standard_EXPORT virtual   Handle(ShapeUpgrade_SplitCurve2d) GetSplitCurve2dTool()  const;
  
  //! Returns the tool for splitting 3D curves.
  Standard_EXPORT virtual   Handle(ShapeUpgrade_SplitCurve3d) GetSplitCurve3dTool()  const;




  DEFINE_STANDARD_RTTI(ShapeUpgrade_EdgeDivide)

protected:


  TopoDS_Face myFace;
  Standard_Boolean myHasCurve2d;
  Standard_Boolean myHasCurve3d;
  Handle(TColStd_HSequenceOfReal) myKnots2d;
  Handle(TColStd_HSequenceOfReal) myKnots3d;


private: 


  Handle(ShapeUpgrade_SplitCurve3d) mySplitCurve3dTool;
  Handle(ShapeUpgrade_SplitCurve2d) mySplitCurve2dTool;


};


#include <ShapeUpgrade_EdgeDivide.lxx>





#endif // _ShapeUpgrade_EdgeDivide_HeaderFile
