// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TDF_AttributeArray1_HeaderFile
#define _TDF_AttributeArray1_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Standard_Integer.hxx>
#include <Standard_Address.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_TDF_Attribute.hxx>
class Standard_RangeError;
class Standard_DimensionMismatch;
class Standard_OutOfRange;
class Standard_OutOfMemory;
class TDF_Attribute;



class TDF_AttributeArray1 
{
public:

  DEFINE_STANDARD_ALLOC

  
    TDF_AttributeArray1(const Standard_Integer Low, const Standard_Integer Up);
  
    TDF_AttributeArray1(const Handle(TDF_Attribute)& Item, const Standard_Integer Low, const Standard_Integer Up);
  
  Standard_EXPORT   void Init (const Handle(TDF_Attribute)& V) ;
  
      void Destroy() ;
~TDF_AttributeArray1()
{
  Destroy();
}
  
      Standard_Boolean IsAllocated()  const;
  
  Standard_EXPORT  const  TDF_AttributeArray1& Assign (const TDF_AttributeArray1& Other) ;
 const  TDF_AttributeArray1& operator = (const TDF_AttributeArray1& Other) 
{
  return Assign(Other);
}
  
      Standard_Integer Length()  const;
  
      Standard_Integer Lower()  const;
  
      Standard_Integer Upper()  const;
  
      void SetValue (const Standard_Integer Index, const Handle(TDF_Attribute)& Value) ;
  
     const  Handle(TDF_Attribute)& Value (const Standard_Integer Index)  const;
   const  Handle(TDF_Attribute)& operator () (const Standard_Integer Index)  const
{
  return Value(Index);
}
  
      Handle(TDF_Attribute)& ChangeValue (const Standard_Integer Index) ;
    Handle(TDF_Attribute)& operator () (const Standard_Integer Index) 
{
  return ChangeValue(Index);
}




protected:





private:

  
  Standard_EXPORT TDF_AttributeArray1(const TDF_AttributeArray1& AnArray);


  Standard_Integer myLowerBound;
  Standard_Integer myUpperBound;
  Standard_Address myStart;
  Standard_Boolean isAllocated;


};

#define Array1Item Handle(TDF_Attribute)
#define Array1Item_hxx <TDF_Attribute.hxx>
#define TCollection_Array1 TDF_AttributeArray1
#define TCollection_Array1_hxx <TDF_AttributeArray1.hxx>

#include <TCollection_Array1.lxx>

#undef Array1Item
#undef Array1Item_hxx
#undef TCollection_Array1
#undef TCollection_Array1_hxx




#endif // _TDF_AttributeArray1_HeaderFile
