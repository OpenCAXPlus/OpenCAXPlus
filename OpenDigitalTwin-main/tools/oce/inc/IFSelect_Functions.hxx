// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IFSelect_Functions_HeaderFile
#define _IFSelect_Functions_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Handle_Standard_Transient.hxx>
#include <Handle_IFSelect_WorkSession.hxx>
#include <Standard_CString.hxx>
#include <Standard_Integer.hxx>
#include <Handle_TColStd_HSequenceOfTransient.hxx>
#include <Handle_IFSelect_Dispatch.hxx>
#include <Standard_Boolean.hxx>
class Standard_Transient;
class IFSelect_WorkSession;
class TColStd_HSequenceOfTransient;
class IFSelect_Dispatch;


//! Functions gives access to all the actions which can be
//! commanded with the resources provided by IFSelect : especially
//! WorkSession and various types of Selections and Dispatches
//!
//! It works by adding functions by method Init
class IFSelect_Functions 
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! Takes the name of an entity, either as argument, or (if <name>
  //! is empty) on keybord, and returns the entity
  //! name can be a label or a number (in alphanumeric), it is
  //! searched by NumberFromLabel from WorkSession.
  //! If <name> doesn't match en entity, a Null Handle is returned
  Standard_EXPORT static   Handle(Standard_Transient) GiveEntity (const Handle(IFSelect_WorkSession)& WS, const Standard_CString name = "") ;
  
  //! Same as GetEntity, but returns the number in the model of the
  //! entity. Returns 0 for null handle
  Standard_EXPORT static   Standard_Integer GiveEntityNumber (const Handle(IFSelect_WorkSession)& WS, const Standard_CString name = "") ;
  
  //! Computes a List of entities from a WorkSession and two idents,
  //! first and second, as follows :
  //! if <first> is a Number or Label of an entity : this entity
  //! if <first> is the name of a Selection in <WS>, and <second>
  //! not defined, the standard result of this Selection
  //! if <first> is for a Selection and <second> is defined, the
  //! standard result of this selection from the list computed
  //! with <second> (an entity or a selection)
  //! If <second> is erroneous, it is ignored
  Standard_EXPORT static   Handle(TColStd_HSequenceOfTransient) GiveList (const Handle(IFSelect_WorkSession)& WS, const Standard_CString first = "", const Standard_CString second = "") ;
  
  //! Evaluates and returns a Dispatch, from data of a WorkSession
  //! if <mode> is False, searches for exact name of Dispatch in WS
  //! Else (D), allows a parameter between brackets :
  //! ex.: dispatch_name(parameter)
  //! The parameter can be: an integer for DispPerCount or DispPerFiles
  //! or the name of a Signature for DispPerSignature
  //! Returns Null Handle if not found not well evaluated
  Standard_EXPORT static   Handle(IFSelect_Dispatch) GiveDispatch (const Handle(IFSelect_WorkSession)& WS, const Standard_CString name, const Standard_Boolean mode = Standard_True) ;
  
  //! Defines and loads all basic functions (as ActFunc)
  Standard_EXPORT static   void Init() ;




protected:





private:





};







#endif // _IFSelect_Functions_HeaderFile
