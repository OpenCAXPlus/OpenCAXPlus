// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StlMesh_HeaderFile
#define _StlMesh_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Handle_StlMesh_Mesh.hxx>
class StlMesh_Mesh;
class StlMesh_Mesh;
class StlMesh_MeshExplorer;
class StlMesh_MeshDomain;
class StlMesh_MeshTriangle;
class StlMesh_SequenceOfMeshDomain;
class StlMesh_SequenceOfMeshTriangle;
class StlMesh_SequenceOfMesh;
class StlMesh_SequenceNodeOfSequenceOfMeshDomain;
class StlMesh_SequenceNodeOfSequenceOfMeshTriangle;
class StlMesh_SequenceNodeOfSequenceOfMesh;


//! Implements a  basic  mesh data-structure  for  the
//! needs of the application fast prototyping.
class StlMesh 
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! Sequence of meshes
  //! Make a merge of two Mesh and returns a new Mesh.
  //! Very useful if you want to merge partMesh and CheckSurfaceMesh
  //! for example
  Standard_EXPORT static   Handle(StlMesh_Mesh) Merge (const Handle(StlMesh_Mesh)& mesh1, const Handle(StlMesh_Mesh)& mesh2) ;




protected:





private:




friend class StlMesh_Mesh;
friend class StlMesh_MeshExplorer;
friend class StlMesh_MeshDomain;
friend class StlMesh_MeshTriangle;
friend class StlMesh_SequenceOfMeshDomain;
friend class StlMesh_SequenceOfMeshTriangle;
friend class StlMesh_SequenceOfMesh;
friend class StlMesh_SequenceNodeOfSequenceOfMeshDomain;
friend class StlMesh_SequenceNodeOfSequenceOfMeshTriangle;
friend class StlMesh_SequenceNodeOfSequenceOfMesh;

};







#endif // _StlMesh_HeaderFile
