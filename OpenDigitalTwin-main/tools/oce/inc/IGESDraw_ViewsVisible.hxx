// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESDraw_ViewsVisible_HeaderFile
#define _IGESDraw_ViewsVisible_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_IGESDraw_ViewsVisible.hxx>

#include <Handle_IGESDraw_HArray1OfViewKindEntity.hxx>
#include <Handle_IGESData_HArray1OfIGESEntity.hxx>
#include <IGESData_ViewKindEntity.hxx>
#include <Standard_Boolean.hxx>
#include <Standard_Integer.hxx>
#include <Handle_IGESData_ViewKindEntity.hxx>
#include <Handle_IGESData_IGESEntity.hxx>
class IGESDraw_HArray1OfViewKindEntity;
class IGESData_HArray1OfIGESEntity;
class Standard_OutOfRange;
class IGESData_ViewKindEntity;
class IGESData_IGESEntity;


//! Defines IGESViewsVisible, Type <402>, Form <3>
//! in package IGESDraw
//!
//! If an entity is to be displayed in more than one views,
//! this class instance is used, which contains the Visible
//! views and the associated entity Displays.
class IGESDraw_ViewsVisible : public IGESData_ViewKindEntity
{

public:

  
  Standard_EXPORT IGESDraw_ViewsVisible();
  
  //! This method is used to set the fields of the class
  //! ViewsVisible
  //! - allViewEntities  : All View kind entities
  //! - allDisplayEntity : All entities whose display is specified
  Standard_EXPORT   void Init (const Handle(IGESDraw_HArray1OfViewKindEntity)& allViewEntities, const Handle(IGESData_HArray1OfIGESEntity)& allDisplayEntity) ;
  
  //! Changes only the list of Displayed Entities (Null allowed)
  Standard_EXPORT   void InitImplied (const Handle(IGESData_HArray1OfIGESEntity)& allDisplayEntity) ;
  
  //! Returns False (for a complex view)
  Standard_EXPORT   Standard_Boolean IsSingle()  const;
  
  //! returns the Number of views visible
  Standard_EXPORT   Standard_Integer NbViews()  const;
  
  //! returns the number of entities displayed in the Views or zero if
  //! no Entities specified in these Views
  Standard_EXPORT   Standard_Integer NbDisplayedEntities()  const;
  
  //! returns the Index'th ViewKindEntity Entity
  //! raises exception if Index  <= 0 or Index > NbViewsVisible()
  Standard_EXPORT   Handle(IGESData_ViewKindEntity) ViewItem (const Standard_Integer Index)  const;
  
  //! returns the Index'th entity whose display is being specified by
  //! this associativity instance
  //! raises exception if Index  <= 0 or Index > NbEntityDisplayed()
  Standard_EXPORT   Handle(IGESData_IGESEntity) DisplayedEntity (const Standard_Integer Index)  const;




  DEFINE_STANDARD_RTTI(IGESDraw_ViewsVisible)

protected:




private: 


  Handle(IGESDraw_HArray1OfViewKindEntity) theViewEntities;
  Handle(IGESData_HArray1OfIGESEntity) theDisplayEntity;


};







#endif // _IGESDraw_ViewsVisible_HeaderFile
