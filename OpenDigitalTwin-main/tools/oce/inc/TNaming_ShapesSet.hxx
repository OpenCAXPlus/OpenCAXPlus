// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _TNaming_ShapesSet_HeaderFile
#define _TNaming_ShapesSet_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <TopTools_MapOfShape.hxx>
#include <TopAbs_ShapeEnum.hxx>
#include <Standard_Boolean.hxx>
#include <Standard_Integer.hxx>
class TopoDS_Shape;
class TopTools_MapOfShape;



class TNaming_ShapesSet 
{
public:

  DEFINE_STANDARD_ALLOC

  
    TNaming_ShapesSet();
  
  Standard_EXPORT TNaming_ShapesSet(const TopoDS_Shape& S, const TopAbs_ShapeEnum Type = TopAbs_SHAPE);
  
  //! Removes all Shapes
      void Clear() ;
  
  //! Adds the Shape <S>
      Standard_Boolean Add (const TopoDS_Shape& S) ;
  
  //! Returns True  if <S> is in <me>
      Standard_Boolean Contains (const TopoDS_Shape& S)  const;
  
  //! Removes <S> in <me>.
      Standard_Boolean Remove (const TopoDS_Shape& S) ;
  
  //! Adds the shapes contained in <Shapes>.
  Standard_EXPORT   void Add (const TNaming_ShapesSet& Shapes) ;
  
  //! Erases in <me> the shapes not
  //! contained in <Shapes>
  Standard_EXPORT   void Filter (const TNaming_ShapesSet& Shapes) ;
  
  //! Removes in <me> the shapes contained in <Shapes>
  Standard_EXPORT   void Remove (const TNaming_ShapesSet& Shapes) ;
  
      Standard_Boolean IsEmpty()  const;
  
      Standard_Integer NbShapes()  const;
  
      TopTools_MapOfShape& ChangeMap() ;
  
     const  TopTools_MapOfShape& Map()  const;




protected:





private:



  TopTools_MapOfShape myMap;


};


#include <TNaming_ShapesSet.lxx>





#endif // _TNaming_ShapesSet_HeaderFile
