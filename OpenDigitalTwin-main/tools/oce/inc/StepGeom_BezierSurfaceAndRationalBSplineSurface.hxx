// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StepGeom_BezierSurfaceAndRationalBSplineSurface_HeaderFile
#define _StepGeom_BezierSurfaceAndRationalBSplineSurface_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_StepGeom_BezierSurfaceAndRationalBSplineSurface.hxx>

#include <Handle_StepGeom_BezierSurface.hxx>
#include <Handle_StepGeom_RationalBSplineSurface.hxx>
#include <StepGeom_BSplineSurface.hxx>
#include <Handle_TCollection_HAsciiString.hxx>
#include <Standard_Integer.hxx>
#include <Handle_StepGeom_HArray2OfCartesianPoint.hxx>
#include <StepGeom_BSplineSurfaceForm.hxx>
#include <StepData_Logical.hxx>
#include <Handle_TColStd_HArray2OfReal.hxx>
#include <Standard_Real.hxx>
class StepGeom_BezierSurface;
class StepGeom_RationalBSplineSurface;
class TCollection_HAsciiString;
class StepGeom_HArray2OfCartesianPoint;
class TColStd_HArray2OfReal;



class StepGeom_BezierSurfaceAndRationalBSplineSurface : public StepGeom_BSplineSurface
{

public:

  
  //! Returns a BezierSurfaceAndRationalBSplineSurface
  Standard_EXPORT StepGeom_BezierSurfaceAndRationalBSplineSurface();
  
  Standard_EXPORT virtual   void Init (const Handle(TCollection_HAsciiString)& aName, const Standard_Integer aUDegree, const Standard_Integer aVDegree, const Handle(StepGeom_HArray2OfCartesianPoint)& aControlPointsList, const StepGeom_BSplineSurfaceForm aSurfaceForm, const StepData_Logical aUClosed, const StepData_Logical aVClosed, const StepData_Logical aSelfIntersect) ;
  
  Standard_EXPORT virtual   void Init (const Handle(TCollection_HAsciiString)& aName, const Standard_Integer aUDegree, const Standard_Integer aVDegree, const Handle(StepGeom_HArray2OfCartesianPoint)& aControlPointsList, const StepGeom_BSplineSurfaceForm aSurfaceForm, const StepData_Logical aUClosed, const StepData_Logical aVClosed, const StepData_Logical aSelfIntersect, const Handle(StepGeom_BezierSurface)& aBezierSurface, const Handle(StepGeom_RationalBSplineSurface)& aRationalBSplineSurface) ;
  
  Standard_EXPORT virtual   void Init (const Handle(TCollection_HAsciiString)& aName, const Standard_Integer aUDegree, const Standard_Integer aVDegree, const Handle(StepGeom_HArray2OfCartesianPoint)& aControlPointsList, const StepGeom_BSplineSurfaceForm aSurfaceForm, const StepData_Logical aUClosed, const StepData_Logical aVClosed, const StepData_Logical aSelfIntersect, const Handle(TColStd_HArray2OfReal)& aWeightsData) ;
  
  Standard_EXPORT   void SetBezierSurface (const Handle(StepGeom_BezierSurface)& aBezierSurface) ;
  
  Standard_EXPORT   Handle(StepGeom_BezierSurface) BezierSurface()  const;
  
  Standard_EXPORT   void SetRationalBSplineSurface (const Handle(StepGeom_RationalBSplineSurface)& aRationalBSplineSurface) ;
  
  Standard_EXPORT   Handle(StepGeom_RationalBSplineSurface) RationalBSplineSurface()  const;
  
  Standard_EXPORT   void SetWeightsData (const Handle(TColStd_HArray2OfReal)& aWeightsData) ;
  
  Standard_EXPORT   Handle(TColStd_HArray2OfReal) WeightsData()  const;
  
  Standard_EXPORT   Standard_Real WeightsDataValue (const Standard_Integer num1, const Standard_Integer num2)  const;
  
  Standard_EXPORT   Standard_Integer NbWeightsDataI()  const;
  
  Standard_EXPORT   Standard_Integer NbWeightsDataJ()  const;




  DEFINE_STANDARD_RTTI(StepGeom_BezierSurfaceAndRationalBSplineSurface)

protected:




private: 


  Handle(StepGeom_BezierSurface) bezierSurface;
  Handle(StepGeom_RationalBSplineSurface) rationalBSplineSurface;


};







#endif // _StepGeom_BezierSurfaceAndRationalBSplineSurface_HeaderFile
