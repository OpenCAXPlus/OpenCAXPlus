// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _DrawTrSurf_Triangulation2D_HeaderFile
#define _DrawTrSurf_Triangulation2D_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_DrawTrSurf_Triangulation2D.hxx>

#include <Handle_Poly_Triangulation.hxx>
#include <Handle_TColStd_HArray1OfInteger.hxx>
#include <Draw_Drawable2D.hxx>
#include <Handle_Draw_Drawable3D.hxx>
#include <Standard_OStream.hxx>
#include <Draw_Interpretor.hxx>
class Poly_Triangulation;
class TColStd_HArray1OfInteger;
class Draw_Display;
class Draw_Drawable3D;


//! Used to display a 2d triangulation.
//!
//! Display internal edges in blue
//! Display boundary edges in red
//! Optional display of triangles and nodes indices.
class DrawTrSurf_Triangulation2D : public Draw_Drawable2D
{

public:

  
  Standard_EXPORT DrawTrSurf_Triangulation2D(const Handle(Poly_Triangulation)& T);
  
  Standard_EXPORT   Handle(Poly_Triangulation) Triangulation()  const;
  
  Standard_EXPORT   void DrawOn (Draw_Display& dis)  const;
  
  //! For variable copy.
  Standard_EXPORT virtual   Handle(Draw_Drawable3D) Copy()  const;
  
  //! For variable dump.
  Standard_EXPORT virtual   void Dump (Standard_OStream& S)  const;
  
  //! For variable whatis command. Set  as a result  the
  //! type of the variable.
  Standard_EXPORT virtual   void Whatis (Draw_Interpretor& I)  const;




  DEFINE_STANDARD_RTTI(DrawTrSurf_Triangulation2D)

protected:




private: 


  Handle(Poly_Triangulation) myTriangulation;
  Handle(TColStd_HArray1OfInteger) myInternals;
  Handle(TColStd_HArray1OfInteger) myFree;


};







#endif // _DrawTrSurf_Triangulation2D_HeaderFile
