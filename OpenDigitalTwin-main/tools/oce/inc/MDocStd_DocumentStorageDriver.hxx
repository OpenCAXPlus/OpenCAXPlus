// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _MDocStd_DocumentStorageDriver_HeaderFile
#define _MDocStd_DocumentStorageDriver_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_MDocStd_DocumentStorageDriver.hxx>

#include <Handle_MDF_ASDriverTable.hxx>
#include <PCDM_StorageDriver.hxx>
#include <Handle_PCDM_Document.hxx>
#include <Handle_TDocStd_Document.hxx>
#include <Handle_PDocStd_Document.hxx>
#include <Handle_MDF_SRelocationTable.hxx>
#include <Handle_CDM_Document.hxx>
#include <Handle_CDM_MessageDriver.hxx>
class MDF_ASDriverTable;
class PCDM_Document;
class TDocStd_Document;
class PDocStd_Document;
class MDF_SRelocationTable;
class CDM_Document;
class TCollection_ExtendedString;
class CDM_MessageDriver;


//! storage driver for  a standard document
class MDocStd_DocumentStorageDriver : public PCDM_StorageDriver
{

public:

  
  Standard_EXPORT MDocStd_DocumentStorageDriver();
  
  //! returns an empty PDocStd_Document. may be redefined;
  Standard_EXPORT virtual   Handle(PCDM_Document) CreateDocument() ;
  
  //! virtual  methods of StorageDriver from PCDM
  //! ============================================
  Standard_EXPORT   void Paste (const Handle(TDocStd_Document)& TDOC, const Handle(PDocStd_Document)& PDOC, const Handle(MDF_SRelocationTable)& aReloc) ;
  
  //! virtual methods (may be redefined by specialized application)
  //! =============================================================
  Standard_EXPORT virtual   Handle(PCDM_Document) Make (const Handle(CDM_Document)& aDocument) ;
  
  Standard_EXPORT virtual   TCollection_ExtendedString SchemaName()  const;
  
  Standard_EXPORT virtual   Handle(MDF_ASDriverTable) AttributeDrivers (const Handle(CDM_MessageDriver)& theMessageDriver) ;




  DEFINE_STANDARD_RTTI(MDocStd_DocumentStorageDriver)

protected:




private: 


  Handle(MDF_ASDriverTable) myDrivers;


};







#endif // _MDocStd_DocumentStorageDriver_HeaderFile
