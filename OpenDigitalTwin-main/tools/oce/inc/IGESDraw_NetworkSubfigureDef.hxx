// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESDraw_NetworkSubfigureDef_HeaderFile
#define _IGESDraw_NetworkSubfigureDef_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_IGESDraw_NetworkSubfigureDef.hxx>

#include <Standard_Integer.hxx>
#include <Handle_TCollection_HAsciiString.hxx>
#include <Handle_IGESData_HArray1OfIGESEntity.hxx>
#include <Handle_IGESGraph_TextDisplayTemplate.hxx>
#include <Handle_IGESDraw_HArray1OfConnectPoint.hxx>
#include <IGESData_IGESEntity.hxx>
#include <Handle_IGESData_IGESEntity.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_IGESDraw_ConnectPoint.hxx>
class TCollection_HAsciiString;
class IGESData_HArray1OfIGESEntity;
class IGESGraph_TextDisplayTemplate;
class IGESDraw_HArray1OfConnectPoint;
class Standard_OutOfRange;
class IGESData_IGESEntity;
class IGESDraw_ConnectPoint;


//! defines IGESNetworkSubfigureDef,
//! Type <320> Form Number <0> in package IGESDraw
//!
//! This class differs from the ordinary subfigure definition
//! in that it defines a specialized subfigure, one whose
//! instances may participate in networks.
//!
//! The Number of associated(child) Connect Point Entities
//! in the Network Subfigure Instance must match the number
//! in the Network Subfigure Definition, their order must
//! be identical, and any unused points of connection in
//! the instance must be indicated by a null(zero) pointer.
class IGESDraw_NetworkSubfigureDef : public IGESData_IGESEntity
{

public:

  
  Standard_EXPORT IGESDraw_NetworkSubfigureDef();
  
  //! This method is used to set fields of the class
  //! NetworkSubfigureDef
  //! - aDepth           : Depth of Subfigure
  //! (indicating the amount of nesting)
  //! - aName            : Subfigure Name
  //! - allEntities      : Associated subfigures Entities exclusive
  //! of primary reference designator and
  //! Control Points.
  //! - aTypeFlag        : Type flag determines which Entity
  //! belongs in which design
  //! (Logical design or Physical design)
  //! - aDesignator      : Designator HAsciiString and its Template
  //! - allPointEntities : Associated Connect Point Entities
  Standard_EXPORT   void Init (const Standard_Integer aDepth, const Handle(TCollection_HAsciiString)& aName, const Handle(IGESData_HArray1OfIGESEntity)& allEntities, const Standard_Integer aTypeFlag, const Handle(TCollection_HAsciiString)& aDesignator, const Handle(IGESGraph_TextDisplayTemplate)& aTemplate, const Handle(IGESDraw_HArray1OfConnectPoint)& allPointEntities) ;
  
  //! returns Depth of Subfigure(indication the amount of nesting)
  //! Note : The Depth is inclusive of both Network Subfigure Definition
  //! Entity and the Ordinary Subfigure Definition Entity.
  //! Thus, the two may be nested.
  Standard_EXPORT   Standard_Integer Depth()  const;
  
  //! returns the Subfigure Name
  Standard_EXPORT   Handle(TCollection_HAsciiString) Name()  const;
  
  //! returns Number of Associated(child) entries in subfigure exclusive
  //! of primary reference designator and Control Points
  Standard_EXPORT   Standard_Integer NbEntities()  const;
  
  //! returns the Index'th IGESEntity in subfigure exclusive of primary
  //! reference designator and Control Points
  //! raises exception if Index  <=0 or Index > NbEntities()
  Standard_EXPORT   Handle(IGESData_IGESEntity) Entity (const Standard_Integer Index)  const;
  
  //! return value = 0 : Not Specified
  //! = 1 : Logical  design
  //! = 2 : Physical design
  Standard_EXPORT   Standard_Integer TypeFlag()  const;
  
  //! returns Primary Reference Designator
  Standard_EXPORT   Handle(TCollection_HAsciiString) Designator()  const;
  
  //! returns True if Text Display Template is specified for
  //! primary designator else returns False
  Standard_EXPORT   Standard_Boolean HasDesignatorTemplate()  const;
  
  //! if Text Display Template specified then return TextDisplayTemplate
  //! else return NULL Handle
  Standard_EXPORT   Handle(IGESGraph_TextDisplayTemplate) DesignatorTemplate()  const;
  
  //! returns the Number Of Associated(child) Connect Point Entities
  Standard_EXPORT   Standard_Integer NbPointEntities()  const;
  
  //! returns True is Index'th Associated Connect Point Entity is present
  //! else returns False
  //! raises exception if Index is out of bound
  Standard_EXPORT   Standard_Boolean HasPointEntity (const Standard_Integer Index)  const;
  
  //! returns the Index'th Associated Connect Point Entity
  //! raises exception if Index <= 0 or Index > NbPointEntities()
  Standard_EXPORT   Handle(IGESDraw_ConnectPoint) PointEntity (const Standard_Integer Index)  const;




  DEFINE_STANDARD_RTTI(IGESDraw_NetworkSubfigureDef)

protected:




private: 


  Standard_Integer theDepth;
  Handle(TCollection_HAsciiString) theName;
  Handle(IGESData_HArray1OfIGESEntity) theEntities;
  Standard_Integer theTypeFlag;
  Handle(TCollection_HAsciiString) theDesignator;
  Handle(IGESGraph_TextDisplayTemplate) theDesignatorTemplate;
  Handle(IGESDraw_HArray1OfConnectPoint) thePointEntities;


};







#endif // _IGESDraw_NetworkSubfigureDef_HeaderFile
