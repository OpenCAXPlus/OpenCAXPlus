// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _LProp_SequenceOfCIType_HeaderFile
#define _LProp_SequenceOfCIType_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <TCollection_BaseSequence.hxx>
#include <LProp_CIType.hxx>
#include <Handle_LProp_SequenceNodeOfSequenceOfCIType.hxx>
#include <Standard_Integer.hxx>
class Standard_NoSuchObject;
class Standard_OutOfRange;
class LProp_SequenceNodeOfSequenceOfCIType;



class LProp_SequenceOfCIType  : public TCollection_BaseSequence
{
public:

  DEFINE_STANDARD_ALLOC

  
    LProp_SequenceOfCIType();
  
  Standard_EXPORT LProp_SequenceOfCIType(const LProp_SequenceOfCIType& Other);
  
  Standard_EXPORT   void Clear() ;
~LProp_SequenceOfCIType()
{
  Clear();
}
  
  Standard_EXPORT  const  LProp_SequenceOfCIType& Assign (const LProp_SequenceOfCIType& Other) ;
 const  LProp_SequenceOfCIType& operator = (const LProp_SequenceOfCIType& Other) 
{
  return Assign(Other);
}
  
  Standard_EXPORT   void Append (const LProp_CIType& T) ;
  
      void Append (LProp_SequenceOfCIType& S) ;
  
  Standard_EXPORT   void Prepend (const LProp_CIType& T) ;
  
      void Prepend (LProp_SequenceOfCIType& S) ;
  
      void InsertBefore (const Standard_Integer Index, const LProp_CIType& T) ;
  
      void InsertBefore (const Standard_Integer Index, LProp_SequenceOfCIType& S) ;
  
  Standard_EXPORT   void InsertAfter (const Standard_Integer Index, const LProp_CIType& T) ;
  
      void InsertAfter (const Standard_Integer Index, LProp_SequenceOfCIType& S) ;
  
  Standard_EXPORT  const  LProp_CIType& First()  const;
  
  Standard_EXPORT  const  LProp_CIType& Last()  const;
  
      void Split (const Standard_Integer Index, LProp_SequenceOfCIType& Sub) ;
  
  Standard_EXPORT  const  LProp_CIType& Value (const Standard_Integer Index)  const;
 const  LProp_CIType& operator() (const Standard_Integer Index)  const
{
  return Value(Index);
}
  
  Standard_EXPORT   void SetValue (const Standard_Integer Index, const LProp_CIType& I) ;
  
  Standard_EXPORT   LProp_CIType& ChangeValue (const Standard_Integer Index) ;
  LProp_CIType& operator() (const Standard_Integer Index) 
{
  return ChangeValue(Index);
}
  
  Standard_EXPORT   void Remove (const Standard_Integer Index) ;
  
  Standard_EXPORT   void Remove (const Standard_Integer FromIndex, const Standard_Integer ToIndex) ;




protected:





private:





};

#define SeqItem LProp_CIType
#define SeqItem_hxx <LProp_CIType.hxx>
#define TCollection_SequenceNode LProp_SequenceNodeOfSequenceOfCIType
#define TCollection_SequenceNode_hxx <LProp_SequenceNodeOfSequenceOfCIType.hxx>
#define Handle_TCollection_SequenceNode Handle_LProp_SequenceNodeOfSequenceOfCIType
#define TCollection_SequenceNode_Type_() LProp_SequenceNodeOfSequenceOfCIType_Type_()
#define TCollection_Sequence LProp_SequenceOfCIType
#define TCollection_Sequence_hxx <LProp_SequenceOfCIType.hxx>

#include <TCollection_Sequence.lxx>

#undef SeqItem
#undef SeqItem_hxx
#undef TCollection_SequenceNode
#undef TCollection_SequenceNode_hxx
#undef Handle_TCollection_SequenceNode
#undef TCollection_SequenceNode_Type_
#undef TCollection_Sequence
#undef TCollection_Sequence_hxx




#endif // _LProp_SequenceOfCIType_HeaderFile
