// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _ProjLib_ProjectOnSurface_HeaderFile
#define _ProjLib_ProjectOnSurface_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Handle_Adaptor3d_HCurve.hxx>
#include <Handle_Adaptor3d_HSurface.hxx>
#include <Standard_Real.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_Geom_BSplineCurve.hxx>
class Adaptor3d_HCurve;
class Adaptor3d_HSurface;
class Geom_BSplineCurve;


//! Project a curve on a  surface.  The result ( a  3D
//! Curve)  will be an approximation
class ProjLib_ProjectOnSurface 
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! Create an empty projector.
  Standard_EXPORT ProjLib_ProjectOnSurface();
  
  //! Create a projector normaly to the surface <S>.
  Standard_EXPORT ProjLib_ProjectOnSurface(const Handle(Adaptor3d_HSurface)& S);
  
  Standard_EXPORT virtual   void Delete() ;
Standard_EXPORT virtual ~ProjLib_ProjectOnSurface(){Delete() ; }
  
  //! Set the Surface to <S>.
  //! To compute the projection, you have to Load the Curve.
  Standard_EXPORT   void Load (const Handle(Adaptor3d_HSurface)& S) ;
  
  //! Compute the projection of the curve <C> on the Surface.
  Standard_EXPORT   void Load (const Handle(Adaptor3d_HCurve)& C, const Standard_Real Tolerance) ;
  
  Standard_EXPORT   Standard_Boolean IsDone()  const;
  
  Standard_EXPORT   Handle(Geom_BSplineCurve) BSpline()  const;




protected:





private:



  Handle(Adaptor3d_HCurve) myCurve;
  Handle(Adaptor3d_HSurface) mySurface;
  Standard_Real myTolerance;
  Standard_Boolean myIsDone;
  Handle(Geom_BSplineCurve) myResult;


};







#endif // _ProjLib_ProjectOnSurface_HeaderFile
