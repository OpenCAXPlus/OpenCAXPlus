// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _PBRep_Curve3D_HeaderFile
#define _PBRep_Curve3D_HeaderFile

#include <Standard_Macro.hxx>
#include <Standard_DefineHandle.hxx>
#include <Standard.hxx>
#include <Handle_PBRep_Curve3D.hxx>

#include <Handle_PGeom_Curve.hxx>
#include <Standard_Boolean.hxx>
#include <PBRep_GCurve.hxx>
#include <Standard_Real.hxx>
class PGeom_Curve;
class PTopLoc_Location;


class PBRep_Curve3D : public PBRep_GCurve
{

public:

  
  //! CF is curve first param
  //! CL is curve last param
  //! As far as they can't be computed from a Persistent Curve
  //! they are given in the Curve3D constructor
  Standard_EXPORT PBRep_Curve3D(const Handle(PGeom_Curve)& C, const Standard_Real CF, const Standard_Real CL, const PTopLoc_Location& L);
  
  Standard_EXPORT   Handle(PGeom_Curve) Curve3D()  const;
  
  //! Returns True.
  Standard_EXPORT virtual   Standard_Boolean IsCurve3D()  const;

PBRep_Curve3D( )
{
  
}
PBRep_Curve3D(const Storage_stCONSTclCOM& a) : PBRep_GCurve(a)
{
  
}
    Handle(PGeom_Curve) _CSFDB_GetPBRep_Curve3DmyCurve3D() const { return myCurve3D; }
    void _CSFDB_SetPBRep_Curve3DmyCurve3D(const Handle(PGeom_Curve)& p) { myCurve3D = p; }



  DEFINE_STANDARD_RTTI(PBRep_Curve3D)

protected:




private: 


  Handle(PGeom_Curve) myCurve3D;


};







#endif // _PBRep_Curve3D_HeaderFile
