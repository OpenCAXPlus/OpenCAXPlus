// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESSelect_IGESTypeForm_HeaderFile
#define _IGESSelect_IGESTypeForm_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_IGESSelect_IGESTypeForm.hxx>

#include <Standard_Boolean.hxx>
#include <IFSelect_Signature.hxx>
#include <Standard_CString.hxx>
#include <Handle_Standard_Transient.hxx>
#include <Handle_Interface_InterfaceModel.hxx>
class Standard_Transient;
class Interface_InterfaceModel;


//! IGESTypeForm is a Signature specific to the IGES Norm :
//! it gives the signature under two possible forms :
//! - as "mmm nnn", with "mmm" as IGES Type Number, and "nnn"
//! as IGES From Number (even if = 0)  [Default]
//! - as "mmm" alone, which gives only the IGES Type Number
class IGESSelect_IGESTypeForm : public IFSelect_Signature
{

public:

  
  //! Creates a Signature for IGES Type & Form Numbers
  //! If <withform> is False, for IGES Type Number only
  Standard_EXPORT IGESSelect_IGESTypeForm(const Standard_Boolean withform = Standard_True);
  
  //! Changes the mode for giving the Form Number
  Standard_EXPORT   void SetForm (const Standard_Boolean withform) ;
  
  //! Returns the signature for IGES, "mmm nnn" or "mmm" according
  //! creation choice (Type & Form or Type only)
  Standard_EXPORT   Standard_CString Value (const Handle(Standard_Transient)& ent, const Handle(Interface_InterfaceModel)& model)  const;




  DEFINE_STANDARD_RTTI(IGESSelect_IGESTypeForm)

protected:




private: 


  Standard_Boolean theform;


};







#endif // _IGESSelect_IGESTypeForm_HeaderFile
