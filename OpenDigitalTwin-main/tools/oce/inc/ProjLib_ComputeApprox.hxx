// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _ProjLib_ComputeApprox_HeaderFile
#define _ProjLib_ComputeApprox_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Standard_Real.hxx>
#include <Handle_Geom2d_BSplineCurve.hxx>
#include <Handle_Geom2d_BezierCurve.hxx>
#include <Handle_Adaptor3d_HCurve.hxx>
#include <Handle_Adaptor3d_HSurface.hxx>
class Geom2d_BSplineCurve;
class Geom2d_BezierCurve;
class Adaptor3d_HCurve;
class Adaptor3d_HSurface;


//! Approximate the  projection of  a 3d curve   on an
//! analytic surface and stores the result in Approx.
//! The result is a 2d curve.
class ProjLib_ComputeApprox 
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! <Tol>    is   the   tolerance   with  which    the
  //! approximation is performed.
  Standard_EXPORT ProjLib_ComputeApprox(const Handle(Adaptor3d_HCurve)& C, const Handle(Adaptor3d_HSurface)& S, const Standard_Real Tol);
  
  Standard_EXPORT   Handle(Geom2d_BSplineCurve) BSpline()  const;
  
  Standard_EXPORT   Handle(Geom2d_BezierCurve) Bezier()  const;
  
  //! returns the reached Tolerance.
  Standard_EXPORT   Standard_Real Tolerance()  const;




protected:





private:



  Standard_Real myTolerance;
  Handle(Geom2d_BSplineCurve) myBSpline;
  Handle(Geom2d_BezierCurve) myBezier;


};







#endif // _ProjLib_ComputeApprox_HeaderFile
