// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _MoniTool_SignText_HeaderFile
#define _MoniTool_SignText_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_MoniTool_SignText.hxx>

#include <MMgt_TShared.hxx>
#include <Standard_CString.hxx>
#include <Handle_Standard_Transient.hxx>
class TCollection_AsciiString;
class Standard_Transient;


//! Provides the basic service to get a text which identifies
//! an object in a context
//! It can be used for other classes (general signatures ...)
//! It can also be used to build a message in which an object
//! is to be identified
class MoniTool_SignText : public MMgt_TShared
{

public:

  
  //! Returns an identification of the Signature (a word), given at
  //! initialization time
  Standard_EXPORT virtual   Standard_CString Name()  const = 0;
  
  //! Gives a text as a signature for a transient object alone, i.e.
  //! without defined context.
  //! By default, calls Text with undefined context (Null Handle) and
  //! if empty, then returns DynamicType
  Standard_EXPORT virtual   TCollection_AsciiString TextAlone (const Handle(Standard_Transient)& ent)  const;
  
  //! Gives a text as a signature for a transient object in a context
  //! If the context is senseless, it can be given as Null Handle
  //! empty result if nothing to give (at least the DynamicType could
  //! be sent ?)
  Standard_EXPORT virtual   TCollection_AsciiString Text (const Handle(Standard_Transient)& ent, const Handle(Standard_Transient)& context)  const = 0;




  DEFINE_STANDARD_RTTI(MoniTool_SignText)

protected:




private: 




};







#endif // _MoniTool_SignText_HeaderFile
