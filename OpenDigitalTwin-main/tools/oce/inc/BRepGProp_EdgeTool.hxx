// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRepGProp_EdgeTool_HeaderFile
#define _BRepGProp_EdgeTool_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Standard_Real.hxx>
#include <Standard_Integer.hxx>
#include <GeomAbs_Shape.hxx>
class Standard_OutOfRange;
class BRepAdaptor_Curve;
class gp_Pnt;
class gp_Vec;
class TColStd_Array1OfReal;


//! Provides  the required  methods    to instantiate
//! CGProps from GProp with a Curve from BRepAdaptor.
class BRepGProp_EdgeTool 
{
public:

  DEFINE_STANDARD_ALLOC

  

  //! Returns the parametric value of the start point of
  //! the curve.  The curve is oriented from the start point
  //! to the end point.
  Standard_EXPORT static   Standard_Real FirstParameter (const BRepAdaptor_Curve& C) ;
  

  //! Returns the parametric value of the end point of
  //! the curve.  The curve is oriented from the start point
  //! to the end point.
  Standard_EXPORT static   Standard_Real LastParameter (const BRepAdaptor_Curve& C) ;
  

  //! Returns the number of Gauss points required to do
  //! the integration with a good accuracy using the
  //! Gauss method.  For a polynomial curve of degree n
  //! the maxima of accuracy is obtained with an order
  //! of integration equal to 2*n-1.
  Standard_EXPORT static   Standard_Integer IntegrationOrder (const BRepAdaptor_Curve& C) ;
  
  //! Returns the point of parameter U on the loaded curve.
  Standard_EXPORT static   gp_Pnt Value (const BRepAdaptor_Curve& C, const Standard_Real U) ;
  

  //! Returns the point of parameter U and the first derivative
  //! at this point.
  Standard_EXPORT static   void D1 (const BRepAdaptor_Curve& C, const Standard_Real U, gp_Pnt& P, gp_Vec& V1) ;
  
  //! Returns  the number  of  intervals for  continuity
  //! <S>. May be one if Continuity(me) >= <S>
  Standard_EXPORT static   Standard_Integer NbIntervals (const BRepAdaptor_Curve& C, const GeomAbs_Shape S) ;
  
  //! Stores in <T> the  parameters bounding the intervals
  //! of continuity <S>.
  //!
  //! The array must provide  enough room to  accomodate
  //! for the parameters. i.e. T.Length() > NbIntervals()
  Standard_EXPORT static   void Intervals (const BRepAdaptor_Curve& C, TColStd_Array1OfReal& T, const GeomAbs_Shape S) ;




protected:





private:





};







#endif // _BRepGProp_EdgeTool_HeaderFile
