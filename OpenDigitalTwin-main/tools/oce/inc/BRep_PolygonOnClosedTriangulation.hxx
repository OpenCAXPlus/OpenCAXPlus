// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRep_PolygonOnClosedTriangulation_HeaderFile
#define _BRep_PolygonOnClosedTriangulation_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_BRep_PolygonOnClosedTriangulation.hxx>

#include <Handle_Poly_PolygonOnTriangulation.hxx>
#include <BRep_PolygonOnTriangulation.hxx>
#include <Handle_Poly_Triangulation.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_BRep_CurveRepresentation.hxx>
class Poly_PolygonOnTriangulation;
class Poly_Triangulation;
class TopLoc_Location;
class BRep_CurveRepresentation;


//! A representation by two arrays of nodes on a
//! triangulation.
class BRep_PolygonOnClosedTriangulation : public BRep_PolygonOnTriangulation
{

public:

  
  Standard_EXPORT BRep_PolygonOnClosedTriangulation(const Handle(Poly_PolygonOnTriangulation)& P1, const Handle(Poly_PolygonOnTriangulation)& P2, const Handle(Poly_Triangulation)& Tr, const TopLoc_Location& L);
  
  //! Returns True.
  Standard_EXPORT virtual   Standard_Boolean IsPolygonOnClosedTriangulation()  const;
  
  Standard_EXPORT virtual   void PolygonOnTriangulation2 (const Handle(Poly_PolygonOnTriangulation)& P2) ;
  
  Standard_EXPORT virtual  const  Handle(Poly_PolygonOnTriangulation)& PolygonOnTriangulation2()  const;
  
  //! Return a copy of this representation.
  Standard_EXPORT virtual   Handle(BRep_CurveRepresentation) Copy()  const;




  DEFINE_STANDARD_RTTI(BRep_PolygonOnClosedTriangulation)

protected:




private: 


  Handle(Poly_PolygonOnTriangulation) myPolygon2;


};







#endif // _BRep_PolygonOnClosedTriangulation_HeaderFile
