// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _GeomFill_SimpleBound_HeaderFile
#define _GeomFill_SimpleBound_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_GeomFill_SimpleBound.hxx>

#include <Handle_Adaptor3d_HCurve.hxx>
#include <Handle_Law_Function.hxx>
#include <GeomFill_Boundary.hxx>
#include <Standard_Real.hxx>
#include <Standard_Boolean.hxx>
class Adaptor3d_HCurve;
class Law_Function;
class gp_Pnt;
class gp_Vec;


//! Defines a 3d curve as a boundary for a
//! GeomFill_ConstrainedFilling algorithm.
//! This curve is unattached to an existing surface.D
//! Contains fields to allow a reparametrization of curve.
class GeomFill_SimpleBound : public GeomFill_Boundary
{

public:

  

  //! Constructs the boundary object defined by the 3d curve.
  //! The surface to be built along this boundary will be in the
  //! tolerance range defined by Tol3d.
  //! This object is to be used as a boundary for a
  //! GeomFill_ConstrainedFilling framework.
  //! Dummy is initialized but has no function in this class.
  //! Warning
  //! Curve is an adapted curve, that is, an object which is an interface between:
  //! -   the services provided by a 3D curve from the package Geom
  //! -   and those required of the curve by the computation
  //! algorithm which uses it.
  //! The adapted curve is created in one of the following ways:
  //! -   First sequence:
  //! Handle(Geom_Curve) myCurve = ... ;
  //! Handle(GeomAdaptor_HCurve)
  //! Curve = new
  //! GeomAdaptor_HCurve(myCurve);
  //! -   Second sequence:
  //! // Step 1
  //! Handle(Geom_Curve) myCurve = ... ;
  //! GeomAdaptor_Curve Crv (myCurve);
  //! // Step 2
  //! Handle(GeomAdaptor_HCurve)
  //! Curve = new
  //! GeomAdaptor_HCurve(Crv);
  //! You use the second part of this sequence if you already
  //! have the adapted curve Crv.
  //! The boundary is then constructed with the Curve object:
  //! Standard_Real Tol = ... ;
  //! Standard_Real dummy = 0. ;
  //! myBoundary = GeomFill_SimpleBound
  //! (Curve,Tol,dummy);
  Standard_EXPORT GeomFill_SimpleBound(const Handle(Adaptor3d_HCurve)& Curve, const Standard_Real Tol3d, const Standard_Real Tolang);
  
  Standard_EXPORT   gp_Pnt Value (const Standard_Real U)  const;
  
  Standard_EXPORT   void D1 (const Standard_Real U, gp_Pnt& P, gp_Vec& V)  const;
  
  Standard_EXPORT   void Reparametrize (const Standard_Real First, const Standard_Real Last, const Standard_Boolean HasDF, const Standard_Boolean HasDL, const Standard_Real DF, const Standard_Real DL, const Standard_Boolean Rev) ;
  
  Standard_EXPORT   void Bounds (Standard_Real& First, Standard_Real& Last)  const;
  
  Standard_EXPORT   Standard_Boolean IsDegenerated()  const;




  DEFINE_STANDARD_RTTI(GeomFill_SimpleBound)

protected:




private: 


  Handle(Adaptor3d_HCurve) myC3d;
  Handle(Law_Function) myPar;


};







#endif // _GeomFill_SimpleBound_HeaderFile
