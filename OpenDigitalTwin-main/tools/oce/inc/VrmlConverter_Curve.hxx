// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _VrmlConverter_Curve_HeaderFile
#define _VrmlConverter_Curve_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Handle_VrmlConverter_Drawer.hxx>
#include <Standard_OStream.hxx>
#include <Standard_Real.hxx>
#include <Standard_Integer.hxx>
class Adaptor3d_Curve;
class VrmlConverter_Drawer;


//! Curve - computes the presentation of objects to be
//! seen  as curves  (the  computation  will  be  made
//! with a constant  number  of  points),  converts this one
//! into  VRML  objects  and  writes (adds) them  into
//! anOStream.   All  requested   properties  of   the
//! representation are specify  in aDrawer  of  Drawer
//! class (VrmlConverter).
//! This kind of the presentation is converted into
//! IndexedLineSet ( VRML ).
class VrmlConverter_Curve 
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! adds to the OStream the drawing of the curve aCurve.
  //! The aspect is defined by LineAspect in aDrawer.
  Standard_EXPORT static   void Add (const Adaptor3d_Curve& aCurve, const Handle(VrmlConverter_Drawer)& aDrawer, Standard_OStream& anOStream) ;
  
  //! adds to the OStream the drawing of the curve aCurve.
  //! The aspect is defined by LineAspect in aDrawer.
  //! The drawing will be limited between the points of parameter
  //! U1 and U2.
  Standard_EXPORT static   void Add (const Adaptor3d_Curve& aCurve, const Standard_Real U1, const Standard_Real U2, const Handle(VrmlConverter_Drawer)& aDrawer, Standard_OStream& anOStream) ;
  
  //! adds to the OStream the drawing of the curve aCurve.
  //! The aspect is the current aspect.
  //! The drawing will be limited between the points of parameter
  //! U1 and U2. aNbPoints defines  number of points on  one interval.
  Standard_EXPORT static   void Add (const Adaptor3d_Curve& aCurve, const Standard_Real U1, const Standard_Real U2, Standard_OStream& anOStream, const Standard_Integer aNbPoints) ;




protected:





private:





};







#endif // _VrmlConverter_Curve_HeaderFile
