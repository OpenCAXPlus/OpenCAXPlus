// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESGeom_Direction_HeaderFile
#define _IGESGeom_Direction_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_IGESGeom_Direction.hxx>

#include <gp_XYZ.hxx>
#include <IGESData_IGESEntity.hxx>
class gp_XYZ;
class gp_Vec;


//! defines IGESDirection, Type <123> Form <0>
//! in package IGESGeom
//! A direction entity is a non-zero vector in Euclidean 3-space
//! that is defined by its three components (direction ratios)
//! with respect to the coordinate axes. If x, y, z are the
//! direction ratios then (x^2 + y^2 + z^2) > 0
class IGESGeom_Direction : public IGESData_IGESEntity
{

public:

  
  Standard_EXPORT IGESGeom_Direction();
  
  //! This method is used to set the fields of the class
  //! Direction
  //! - aDirection : Direction ratios, Z is 0 by default
  Standard_EXPORT   void Init (const gp_XYZ& aDirection) ;
  
  Standard_EXPORT   gp_Vec Value()  const;
  
  //! returns the Direction value after applying Transformation matrix
  Standard_EXPORT   gp_Vec TransformedValue()  const;




  DEFINE_STANDARD_RTTI(IGESGeom_Direction)

protected:




private: 


  gp_XYZ theDirection;


};







#endif // _IGESGeom_Direction_HeaderFile
