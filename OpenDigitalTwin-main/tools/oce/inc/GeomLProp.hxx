// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _GeomLProp_HeaderFile
#define _GeomLProp_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <GeomAbs_Shape.hxx>
#include <Handle_Geom_Curve.hxx>
#include <Standard_Real.hxx>
#include <Standard_Boolean.hxx>
class Geom_Curve;
class GeomLProp_CurveTool;
class GeomLProp_SurfaceTool;
class GeomLProp_CLProps;
class GeomLProp_SLProps;


//! These global functions compute the degree of
//! continuity of a 3D curve built by concatenation of two
//! other curves (or portions of curves) at their junction point.
class GeomLProp 
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! Computes the regularity at the junction between C1 and
  //! C2. The booleans r1 and r2 are true if the curves must
  //! be taken reversed.  The point u1 on C1 and the point
  //! u2 on C2 must be confused.
  //! tl and ta are the linear and angular tolerance used two
  //! compare the derivative.
  Standard_EXPORT static   GeomAbs_Shape Continuity (const Handle(Geom_Curve)& C1, const Handle(Geom_Curve)& C2, const Standard_Real u1, const Standard_Real u2, const Standard_Boolean r1, const Standard_Boolean r2, const Standard_Real tl, const Standard_Real ta) ;
  
  //! The  same  as  preciding   but   using  the   standard
  //! tolerances from package Precision.
  Standard_EXPORT static   GeomAbs_Shape Continuity (const Handle(Geom_Curve)& C1, const Handle(Geom_Curve)& C2, const Standard_Real u1, const Standard_Real u2, const Standard_Boolean r1, const Standard_Boolean r2) ;




protected:





private:




friend class GeomLProp_CurveTool;
friend class GeomLProp_SurfaceTool;
friend class GeomLProp_CLProps;
friend class GeomLProp_SLProps;

};







#endif // _GeomLProp_HeaderFile
