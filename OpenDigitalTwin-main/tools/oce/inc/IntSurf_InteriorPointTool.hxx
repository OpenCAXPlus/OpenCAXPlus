// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IntSurf_InteriorPointTool_HeaderFile
#define _IntSurf_InteriorPointTool_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <gp_Pnt.hxx>
#include <Standard_Real.hxx>
#include <gp_Vec.hxx>
#include <gp_Dir2d.hxx>
class IntSurf_InteriorPoint;


//! This class provides a tool on the "interior point"
//! that can be used to instantiates the Walking
//! algorithmes (see package IntWalk).
class IntSurf_InteriorPointTool 
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! Returns the 3d coordinates of the starting point.
    static   gp_Pnt Value3d (const IntSurf_InteriorPoint& PStart) ;
  
  //! Returns the <U,V> parameters which are associated
  //! with <P>
  //! it's the parameters which start the marching algorithm
    static   void Value2d (const IntSurf_InteriorPoint& PStart, Standard_Real& U, Standard_Real& V) ;
  
  //! returns the tangent at the intersectin in 3d space
  //! associated to <P>
    static   gp_Vec Direction3d (const IntSurf_InteriorPoint& PStart) ;
  
  //! returns the tangent at the intersectin in the
  //! parametric space of the parametrized surface.This tangent
  //! is associated to the value2d
    static   gp_Dir2d Direction2d (const IntSurf_InteriorPoint& PStart) ;




protected:





private:





};


#include <IntSurf_InteriorPointTool.lxx>





#endif // _IntSurf_InteriorPointTool_HeaderFile
