// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_HeaderFile
#define _StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem.hxx>

#include <Handle_StepBasic_MeasureWithUnit.hxx>
#include <Handle_StepShape_HArray1OfValueQualifier.hxx>
#include <StepRepr_RepresentationItem.hxx>
#include <Handle_TCollection_HAsciiString.hxx>
#include <Handle_StepBasic_MeasureValueMember.hxx>
#include <Standard_Integer.hxx>
class StepBasic_MeasureWithUnit;
class StepShape_HArray1OfValueQualifier;
class TCollection_HAsciiString;
class StepBasic_MeasureValueMember;
class StepBasic_Unit;
class StepShape_ValueQualifier;


//! Added for Dimensional Tolerances
//! Complex Type between MeasureRepresentationItem and
//! QualifiedRepresentationItem
class StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem : public StepRepr_RepresentationItem
{

public:

  
  Standard_EXPORT StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem();
  
  Standard_EXPORT   void Init (const Handle(TCollection_HAsciiString)& aName, const Handle(StepBasic_MeasureValueMember)& aValueComponent, const StepBasic_Unit& aUnitComponent, const Handle(StepShape_HArray1OfValueQualifier)& qualifiers) ;
  
  Standard_EXPORT   void SetMeasure (const Handle(StepBasic_MeasureWithUnit)& Measure) ;
  
  Standard_EXPORT   Handle(StepBasic_MeasureWithUnit) Measure()  const;
  
  Standard_EXPORT   Handle(StepShape_HArray1OfValueQualifier) Qualifiers()  const;
  
  Standard_EXPORT   Standard_Integer NbQualifiers()  const;
  
  Standard_EXPORT   void SetQualifiers (const Handle(StepShape_HArray1OfValueQualifier)& qualifiers) ;
  
  Standard_EXPORT   StepShape_ValueQualifier QualifiersValue (const Standard_Integer num)  const;
  
  Standard_EXPORT   void SetQualifiersValue (const Standard_Integer num, const StepShape_ValueQualifier& aqualifier) ;




  DEFINE_STANDARD_RTTI(StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem)

protected:




private: 


  Handle(StepBasic_MeasureWithUnit) myMeasure;
  Handle(StepShape_HArray1OfValueQualifier) theQualifiers;


};







#endif // _StepShape_MeasureRepresentationItemAndQualifiedRepresentationItem_HeaderFile
