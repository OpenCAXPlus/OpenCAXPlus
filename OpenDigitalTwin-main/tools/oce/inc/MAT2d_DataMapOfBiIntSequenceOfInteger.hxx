// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _MAT2d_DataMapOfBiIntSequenceOfInteger_HeaderFile
#define _MAT2d_DataMapOfBiIntSequenceOfInteger_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <TCollection_BasicMap.hxx>
#include <Handle_MAT2d_DataMapNodeOfDataMapOfBiIntSequenceOfInteger.hxx>
#include <Standard_Integer.hxx>
#include <Standard_Boolean.hxx>
#include <Standard_Address.hxx>
class Standard_DomainError;
class Standard_NoSuchObject;
class MAT2d_BiInt;
class TColStd_SequenceOfInteger;
class MAT2d_MapBiIntHasher;
class MAT2d_DataMapNodeOfDataMapOfBiIntSequenceOfInteger;
class MAT2d_DataMapIteratorOfDataMapOfBiIntSequenceOfInteger;



class MAT2d_DataMapOfBiIntSequenceOfInteger  : public TCollection_BasicMap
{
public:

  DEFINE_STANDARD_ALLOC

  
  Standard_EXPORT MAT2d_DataMapOfBiIntSequenceOfInteger(const Standard_Integer NbBuckets = 1);
  
  Standard_EXPORT   MAT2d_DataMapOfBiIntSequenceOfInteger& Assign (const MAT2d_DataMapOfBiIntSequenceOfInteger& Other) ;
  MAT2d_DataMapOfBiIntSequenceOfInteger& operator = (const MAT2d_DataMapOfBiIntSequenceOfInteger& Other) 
{
  return Assign(Other);
}
  
  Standard_EXPORT   void ReSize (const Standard_Integer NbBuckets) ;
  
  Standard_EXPORT   void Clear() ;
~MAT2d_DataMapOfBiIntSequenceOfInteger()
{
  Clear();
}
  
  Standard_EXPORT   Standard_Boolean Bind (const MAT2d_BiInt& K, const TColStd_SequenceOfInteger& I) ;
  
  Standard_EXPORT   Standard_Boolean IsBound (const MAT2d_BiInt& K)  const;
  
  Standard_EXPORT   Standard_Boolean UnBind (const MAT2d_BiInt& K) ;
  
  Standard_EXPORT  const  TColStd_SequenceOfInteger& Find (const MAT2d_BiInt& K)  const;
 const  TColStd_SequenceOfInteger& operator() (const MAT2d_BiInt& K)  const
{
  return Find(K);
}
  
  Standard_EXPORT   TColStd_SequenceOfInteger& ChangeFind (const MAT2d_BiInt& K) ;
  TColStd_SequenceOfInteger& operator() (const MAT2d_BiInt& K) 
{
  return ChangeFind(K);
}
  
  Standard_EXPORT   Standard_Address Find1 (const MAT2d_BiInt& K)  const;
  
  Standard_EXPORT   Standard_Address ChangeFind1 (const MAT2d_BiInt& K) ;




protected:





private:

  
  Standard_EXPORT MAT2d_DataMapOfBiIntSequenceOfInteger(const MAT2d_DataMapOfBiIntSequenceOfInteger& Other);




};







#endif // _MAT2d_DataMapOfBiIntSequenceOfInteger_HeaderFile
