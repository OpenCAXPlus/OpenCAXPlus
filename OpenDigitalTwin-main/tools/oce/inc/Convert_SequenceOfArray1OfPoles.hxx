// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Convert_SequenceOfArray1OfPoles_HeaderFile
#define _Convert_SequenceOfArray1OfPoles_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <TCollection_BaseSequence.hxx>
#include <Handle_TColgp_HArray1OfPnt.hxx>
#include <Handle_Convert_SequenceNodeOfSequenceOfArray1OfPoles.hxx>
#include <Standard_Integer.hxx>
class Standard_NoSuchObject;
class Standard_OutOfRange;
class TColgp_HArray1OfPnt;
class Convert_SequenceNodeOfSequenceOfArray1OfPoles;



class Convert_SequenceOfArray1OfPoles  : public TCollection_BaseSequence
{
public:

  DEFINE_STANDARD_ALLOC

  
    Convert_SequenceOfArray1OfPoles();
  
  Standard_EXPORT Convert_SequenceOfArray1OfPoles(const Convert_SequenceOfArray1OfPoles& Other);
  
  Standard_EXPORT   void Clear() ;
~Convert_SequenceOfArray1OfPoles()
{
  Clear();
}
  
  Standard_EXPORT  const  Convert_SequenceOfArray1OfPoles& Assign (const Convert_SequenceOfArray1OfPoles& Other) ;
 const  Convert_SequenceOfArray1OfPoles& operator = (const Convert_SequenceOfArray1OfPoles& Other) 
{
  return Assign(Other);
}
  
  Standard_EXPORT   void Append (const Handle(TColgp_HArray1OfPnt)& T) ;
  
      void Append (Convert_SequenceOfArray1OfPoles& S) ;
  
  Standard_EXPORT   void Prepend (const Handle(TColgp_HArray1OfPnt)& T) ;
  
      void Prepend (Convert_SequenceOfArray1OfPoles& S) ;
  
      void InsertBefore (const Standard_Integer Index, const Handle(TColgp_HArray1OfPnt)& T) ;
  
      void InsertBefore (const Standard_Integer Index, Convert_SequenceOfArray1OfPoles& S) ;
  
  Standard_EXPORT   void InsertAfter (const Standard_Integer Index, const Handle(TColgp_HArray1OfPnt)& T) ;
  
      void InsertAfter (const Standard_Integer Index, Convert_SequenceOfArray1OfPoles& S) ;
  
  Standard_EXPORT  const  Handle(TColgp_HArray1OfPnt)& First()  const;
  
  Standard_EXPORT  const  Handle(TColgp_HArray1OfPnt)& Last()  const;
  
      void Split (const Standard_Integer Index, Convert_SequenceOfArray1OfPoles& Sub) ;
  
  Standard_EXPORT  const  Handle(TColgp_HArray1OfPnt)& Value (const Standard_Integer Index)  const;
 const  Handle(TColgp_HArray1OfPnt)& operator() (const Standard_Integer Index)  const
{
  return Value(Index);
}
  
  Standard_EXPORT   void SetValue (const Standard_Integer Index, const Handle(TColgp_HArray1OfPnt)& I) ;
  
  Standard_EXPORT   Handle(TColgp_HArray1OfPnt)& ChangeValue (const Standard_Integer Index) ;
  Handle(TColgp_HArray1OfPnt)& operator() (const Standard_Integer Index) 
{
  return ChangeValue(Index);
}
  
  Standard_EXPORT   void Remove (const Standard_Integer Index) ;
  
  Standard_EXPORT   void Remove (const Standard_Integer FromIndex, const Standard_Integer ToIndex) ;




protected:





private:





};

#define SeqItem Handle(TColgp_HArray1OfPnt)
#define SeqItem_hxx <TColgp_HArray1OfPnt.hxx>
#define TCollection_SequenceNode Convert_SequenceNodeOfSequenceOfArray1OfPoles
#define TCollection_SequenceNode_hxx <Convert_SequenceNodeOfSequenceOfArray1OfPoles.hxx>
#define Handle_TCollection_SequenceNode Handle_Convert_SequenceNodeOfSequenceOfArray1OfPoles
#define TCollection_SequenceNode_Type_() Convert_SequenceNodeOfSequenceOfArray1OfPoles_Type_()
#define TCollection_Sequence Convert_SequenceOfArray1OfPoles
#define TCollection_Sequence_hxx <Convert_SequenceOfArray1OfPoles.hxx>

#include <TCollection_Sequence.lxx>

#undef SeqItem
#undef SeqItem_hxx
#undef TCollection_SequenceNode
#undef TCollection_SequenceNode_hxx
#undef Handle_TCollection_SequenceNode
#undef TCollection_SequenceNode_Type_
#undef TCollection_Sequence
#undef TCollection_Sequence_hxx




#endif // _Convert_SequenceOfArray1OfPoles_HeaderFile
