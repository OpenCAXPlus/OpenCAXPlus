// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Units_Sentence_HeaderFile
#define _Units_Sentence_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <Handle_Units_TokensSequence.hxx>
#include <Handle_Units_Lexicon.hxx>
#include <Standard_CString.hxx>
#include <Handle_Units_Token.hxx>
#include <Standard_Boolean.hxx>
class Units_TokensSequence;
class Units_Lexicon;
class Units_Token;


//! This class describes all the methods to create and
//! compute an expression contained in a string.
class Units_Sentence 
{
public:

  DEFINE_STANDARD_ALLOC

  
  //! Creates and  returns  a   Sentence, by  analyzing  the
  //! string <astring> with the lexicon <alexicon>.
  Standard_EXPORT Units_Sentence(const Handle(Units_Lexicon)& alexicon, const Standard_CString astring);
  
  //! For each constant encountered, sets the value.
  Standard_EXPORT   void SetConstants() ;
  
  //! Returns <thesequenceoftokens>.
      Handle(Units_TokensSequence) Sequence()  const;
  
  //! Sets the field <thesequenceoftokens> to <asequenceoftokens>.
      void Sequence (const Handle(Units_TokensSequence)& asequenceoftokens) ;
  
  //! Computes and  returns in a   token the result  of  the
  //! expression.
  Standard_EXPORT   Handle(Units_Token) Evaluate() ;
  
  //! Return True if number of created tokens > 0
  //! (i.e creation of sentence is succesfull)
      Standard_Boolean IsDone()  const;
  
  //! Useful for debugging.
      void Dump()  const;




protected:





private:



  Handle(Units_TokensSequence) thesequenceoftokens;


};


#include <Units_Sentence.lxx>





#endif // _Units_Sentence_HeaderFile
