// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _IGESSolid_ManifoldSolid_HeaderFile
#define _IGESSolid_ManifoldSolid_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_IGESSolid_ManifoldSolid.hxx>

#include <Handle_IGESSolid_Shell.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_IGESSolid_HArray1OfShell.hxx>
#include <Handle_TColStd_HArray1OfInteger.hxx>
#include <IGESData_IGESEntity.hxx>
#include <Standard_Integer.hxx>
class IGESSolid_Shell;
class IGESSolid_HArray1OfShell;
class TColStd_HArray1OfInteger;
class Standard_DimensionMismatch;
class Standard_OutOfRange;


//! defines ManifoldSolid, Type <186> Form Number <0>
//! in package IGESSolid
//! A manifold solid is a bounded, closed, and finite volume
//! in three dimensional Euclidean space
class IGESSolid_ManifoldSolid : public IGESData_IGESEntity
{

public:

  
  Standard_EXPORT IGESSolid_ManifoldSolid();
  
  //! This method is used to set the fields of the class
  //! ManifoldSolid
  //! - aShell         : pointer to the shell
  //! - shellflag      : orientation flag of shell
  //! - voidShells     : the void shells
  //! - voidShellFlags : orientation of the void shells
  //! raises exception if length of voidShells and voidShellFlags
  //! do not match
  Standard_EXPORT   void Init (const Handle(IGESSolid_Shell)& aShell, const Standard_Boolean shellflag, const Handle(IGESSolid_HArray1OfShell)& voidShells, const Handle(TColStd_HArray1OfInteger)& voidShellFlags) ;
  
  //! returns the Shell entity which is being referred
  Standard_EXPORT   Handle(IGESSolid_Shell) Shell()  const;
  
  //! returns the orientation flag of the shell
  Standard_EXPORT   Standard_Boolean OrientationFlag()  const;
  
  //! returns the number of void shells
  Standard_EXPORT   Standard_Integer NbVoidShells()  const;
  
  //! returns Index'th void shell.
  //! raises exception if Index  <= 0 or Index > NbVoidShells()
  Standard_EXPORT   Handle(IGESSolid_Shell) VoidShell (const Standard_Integer Index)  const;
  
  //! returns Index'th orientation flag.
  //! raises exception if Index  <= 0 or Index > NbVoidShells()
  Standard_EXPORT   Standard_Boolean VoidOrientationFlag (const Standard_Integer Index)  const;




  DEFINE_STANDARD_RTTI(IGESSolid_ManifoldSolid)

protected:




private: 


  Handle(IGESSolid_Shell) theShell;
  Standard_Boolean theOrientationFlag;
  Handle(IGESSolid_HArray1OfShell) theVoidShells;
  Handle(TColStd_HArray1OfInteger) theOrientFlags;


};







#endif // _IGESSolid_ManifoldSolid_HeaderFile
