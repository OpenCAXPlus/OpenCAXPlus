// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _BRep_CurveOnClosedSurface_HeaderFile
#define _BRep_CurveOnClosedSurface_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineHandle.hxx>
#include <Handle_BRep_CurveOnClosedSurface.hxx>

#include <Handle_Geom2d_Curve.hxx>
#include <GeomAbs_Shape.hxx>
#include <gp_Pnt2d.hxx>
#include <BRep_CurveOnSurface.hxx>
#include <Handle_Geom_Surface.hxx>
#include <Standard_Boolean.hxx>
#include <Handle_BRep_CurveRepresentation.hxx>
class Geom2d_Curve;
class Geom_Surface;
class TopLoc_Location;
class gp_Pnt2d;
class BRep_CurveRepresentation;


//! Representation  of a    curve by two  pcurves   on
//! a closed surface.
class BRep_CurveOnClosedSurface : public BRep_CurveOnSurface
{

public:

  
  Standard_EXPORT BRep_CurveOnClosedSurface(const Handle(Geom2d_Curve)& PC1, const Handle(Geom2d_Curve)& PC2, const Handle(Geom_Surface)& S, const TopLoc_Location& L, const GeomAbs_Shape C);
  
      void SetUVPoints2 (const gp_Pnt2d& P1, const gp_Pnt2d& P2) ;
  
      void UVPoints2 (gp_Pnt2d& P1, gp_Pnt2d& P2)  const;
  
  //! Returns True.
  Standard_EXPORT virtual   Standard_Boolean IsCurveOnClosedSurface()  const;
  
  //! Returns True
  Standard_EXPORT virtual   Standard_Boolean IsRegularity()  const;
  
  //! A curve on two surfaces (continuity).
  Standard_EXPORT virtual   Standard_Boolean IsRegularity (const Handle(Geom_Surface)& S1, const Handle(Geom_Surface)& S2, const TopLoc_Location& L1, const TopLoc_Location& L2)  const;
  
  Standard_EXPORT virtual  const  Handle(Geom2d_Curve)& PCurve2()  const;
  
  //! Returns Surface()
  Standard_EXPORT virtual  const  Handle(Geom_Surface)& Surface2()  const;
  
  //! Returns Location()
  Standard_EXPORT virtual  const  TopLoc_Location& Location2()  const;
  
  Standard_EXPORT virtual  const  GeomAbs_Shape& Continuity()  const;
  
  Standard_EXPORT virtual   void Continuity (const GeomAbs_Shape C) ;
  
  Standard_EXPORT virtual   void PCurve2 (const Handle(Geom2d_Curve)& C) ;
  
  //! Return a copy of this representation.
  Standard_EXPORT virtual   Handle(BRep_CurveRepresentation) Copy()  const;
  
  //! Recomputes any derived data after a modification.
  //! This is called when the range is modified.
  Standard_EXPORT virtual   void Update() ;




  DEFINE_STANDARD_RTTI(BRep_CurveOnClosedSurface)

protected:




private: 


  Handle(Geom2d_Curve) myPCurve2;
  GeomAbs_Shape myContinuity;
  gp_Pnt2d myUV21;
  gp_Pnt2d myUV22;


};


#include <BRep_CurveOnClosedSurface.lxx>





#endif // _BRep_CurveOnClosedSurface_HeaderFile
