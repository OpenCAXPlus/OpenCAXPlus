// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Draw_SequenceOfDrawable3D_HeaderFile
#define _Draw_SequenceOfDrawable3D_HeaderFile

#include <Standard.hxx>
#include <Standard_DefineAlloc.hxx>
#include <Standard_Macro.hxx>

#include <TCollection_BaseSequence.hxx>
#include <Handle_Draw_Drawable3D.hxx>
#include <Handle_Draw_SequenceNodeOfSequenceOfDrawable3D.hxx>
#include <Standard_Integer.hxx>
class Standard_NoSuchObject;
class Standard_OutOfRange;
class Draw_Drawable3D;
class Draw_SequenceNodeOfSequenceOfDrawable3D;



class Draw_SequenceOfDrawable3D  : public TCollection_BaseSequence
{
public:

  DEFINE_STANDARD_ALLOC

  
    Draw_SequenceOfDrawable3D();
  
  Standard_EXPORT Draw_SequenceOfDrawable3D(const Draw_SequenceOfDrawable3D& Other);
  
  Standard_EXPORT   void Clear() ;
~Draw_SequenceOfDrawable3D()
{
  Clear();
}
  
  Standard_EXPORT  const  Draw_SequenceOfDrawable3D& Assign (const Draw_SequenceOfDrawable3D& Other) ;
 const  Draw_SequenceOfDrawable3D& operator = (const Draw_SequenceOfDrawable3D& Other) 
{
  return Assign(Other);
}
  
  Standard_EXPORT   void Append (const Handle(Draw_Drawable3D)& T) ;
  
      void Append (Draw_SequenceOfDrawable3D& S) ;
  
  Standard_EXPORT   void Prepend (const Handle(Draw_Drawable3D)& T) ;
  
      void Prepend (Draw_SequenceOfDrawable3D& S) ;
  
      void InsertBefore (const Standard_Integer Index, const Handle(Draw_Drawable3D)& T) ;
  
      void InsertBefore (const Standard_Integer Index, Draw_SequenceOfDrawable3D& S) ;
  
  Standard_EXPORT   void InsertAfter (const Standard_Integer Index, const Handle(Draw_Drawable3D)& T) ;
  
      void InsertAfter (const Standard_Integer Index, Draw_SequenceOfDrawable3D& S) ;
  
  Standard_EXPORT  const  Handle(Draw_Drawable3D)& First()  const;
  
  Standard_EXPORT  const  Handle(Draw_Drawable3D)& Last()  const;
  
      void Split (const Standard_Integer Index, Draw_SequenceOfDrawable3D& Sub) ;
  
  Standard_EXPORT  const  Handle(Draw_Drawable3D)& Value (const Standard_Integer Index)  const;
 const  Handle(Draw_Drawable3D)& operator() (const Standard_Integer Index)  const
{
  return Value(Index);
}
  
  Standard_EXPORT   void SetValue (const Standard_Integer Index, const Handle(Draw_Drawable3D)& I) ;
  
  Standard_EXPORT   Handle(Draw_Drawable3D)& ChangeValue (const Standard_Integer Index) ;
  Handle(Draw_Drawable3D)& operator() (const Standard_Integer Index) 
{
  return ChangeValue(Index);
}
  
  Standard_EXPORT   void Remove (const Standard_Integer Index) ;
  
  Standard_EXPORT   void Remove (const Standard_Integer FromIndex, const Standard_Integer ToIndex) ;




protected:





private:





};

#define SeqItem Handle(Draw_Drawable3D)
#define SeqItem_hxx <Draw_Drawable3D.hxx>
#define TCollection_SequenceNode Draw_SequenceNodeOfSequenceOfDrawable3D
#define TCollection_SequenceNode_hxx <Draw_SequenceNodeOfSequenceOfDrawable3D.hxx>
#define Handle_TCollection_SequenceNode Handle_Draw_SequenceNodeOfSequenceOfDrawable3D
#define TCollection_SequenceNode_Type_() Draw_SequenceNodeOfSequenceOfDrawable3D_Type_()
#define TCollection_Sequence Draw_SequenceOfDrawable3D
#define TCollection_Sequence_hxx <Draw_SequenceOfDrawable3D.hxx>

#include <TCollection_Sequence.lxx>

#undef SeqItem
#undef SeqItem_hxx
#undef TCollection_SequenceNode
#undef TCollection_SequenceNode_hxx
#undef Handle_TCollection_SequenceNode
#undef TCollection_SequenceNode_Type_
#undef TCollection_Sequence
#undef TCollection_Sequence_hxx




#endif // _Draw_SequenceOfDrawable3D_HeaderFile
