name: SDK Build & Test
on:
    push:
        paths:
            - '.github/workflows/sdk**'
            - 'framework/**'
            - 'starter/**'
            - 'toolkit/**'
            - 'CMake*'
        branches:
            - 'main'
    pull_request:
        branches:
            - 'main'
jobs:
    linux-base:
        runs-on: [ self-hosted, Linux]
        steps:
            - name: Basic info
              run: |
                  echo "Build for ${{ github.ref }} branch in ${{ github.repository }} repository."
                  echo "Job triggered by ${{ github.event_name }}, on self-hosted ${{ runner.os }}."  
                    echo "Log level: ${{ github.event.inputs.logLevel }}"
                  echo "Tags: ${{ github.event.inputs.tags }}"
            - name: Check out repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
    linux-gnu-build:
        needs: linux-base
        runs-on: [ self-hosted, Linux]
        steps:
            - name: Build 
              run: |
                cmake --preset="linux-gnu-Debug" -S "."
                cmake --build --preset="linux-gnu-Debug" --target install_VTK
                cmake --build --preset="linux-gnu-Debug" --target all
    linux-gnu-test:
        needs: linux-gnu-build
        runs-on: [ self-hosted, Linux]
        steps:
            - name: Test 
              run: ctest --preset="linux-gnu-Debug" 
    linux-intel-build:
        needs: linux-base
        runs-on: [ self-hosted, Linux]
        steps:
            - name: Build 
              run: |
                source /opt/intel/oneapi/setvars.sh
                cmake --preset="linux-intel-Debug" -S "."
                cmake --build --preset="linux-gnu-Debug" --target install_VTK
                cmake --build --preset="linux-intel-Debug" --target all
    linux-intel-test:
        needs: linux-intel-build
        runs-on: [ self-hosted, Linux]
        steps:
            - name: Test 
              run: ctest --preset="linux-intel-Debug" 
#     mac-base:
#         runs-on: [ self-hosted, macOS]
#         steps:
#             - name: Basic info
#               run: |
#                   echo "Build for ${{ github.ref }} branch in ${{ github.repository }} repository."
#                   echo "Job triggered by ${{ github.event_name }}, on self-hosted ${{ runner.os }}."  
#                     echo "Log level: ${{ github.event.inputs.logLevel }}"
#                   echo "Tags: ${{ github.event.inputs.tags }}"
#             - name: Check out repository
#               uses: actions/checkout@v3
#               with:
#                   fetch-depth: 0
#     mac-gnu-build:
#         needs: mac-base
#         runs-on: [ self-hosted, macOS]
#         steps:
#             - name: Build 
#               run: |
#                 cmake --preset="darwin-gnu-Debug" -S "."
#                 cmake --build --preset="darwin-gnu-Debug" --target all
#     mac-gnu-test:
#         needs: mac-gnu-build
#         runs-on: [ self-hosted, macOS]
#         steps:
#             - name: Test 
#               run: ctest --preset="darwin-gnu-Debug" 
    # mac-intel-build:
    #     needs: mac-base
    #     runs-on: [ self-hosted, macOS]
    #     steps:
    #         - name: Build 
    #           run: ./ocp build -b Debug -c intel -t all
    # mac-intel-test:
    #     needs: mac-intel-build
    #     runs-on: [ self-hosted, macOS]
    #     steps:
    #         - name: Test 
    #           run: ./ocp test -b Debug -c intel
#     windows-base:
#         runs-on: [ self-hosted, Windows]
#         steps:
#             - name: Basic info
#               run: |
#                   echo "Build for ${{ github.ref }} branch in ${{ github.repository }} repository."
#                   echo "Job triggered by ${{ github.event_name }}, on self-hosted ${{ runner.os }}."  
#                     echo "Log level: ${{ github.event.inputs.logLevel }}"
#                   echo "Tags: ${{ github.event.inputs.tags }}"
#             - name: Check out repository
#               uses: actions/checkout@v3
#               with:
#                   fetch-depth: 0
    # windows-mingw64-build:
    #     needs: windows-base
    #     runs-on: [ self-hosted, Windows]
    #     steps:
    #         - name: Build 
    #           run: C:/msys64/msys2_shell -mingw64 -defterm -here -full-path -no-start -shell bash -c "./ocp build -b Debug -c gnu -t all"
    # windows-mingw64-test:
    #     needs: windows-mingw64-build
    #     runs-on: [ self-hosted, Windows]
    #     steps:
    #         - name: Test 
    #           run: C:/msys64/msys2_shell -mingw64 -defterm -here -full-path -no-start -shell bash -c "./ocp test -b Debug -c gnu -t all"
#     windows-intel-build:
#         needs: windows-base
#         runs-on: [ self-hosted, Windows]
#         defaults:
#             run:
#                 shell: cmd
#         steps:
#             - name: build 
#               run: |
#                 call "C:\Program Files (x86)\Intel\oneAPI\setvars.bat"
#                 where cmake
#                 where ninja
#                 cmake --preset="windows-intel-Debug" -S "."
#                 cmake --build --preset="windows-intel-Debug" --target all
#     windows-intel-test:
#         needs: windows-intel-build
#         runs-on: [ self-hosted, Windows]
#         defaults:
#             run:
#                 shell: cmd
#         steps:
#             - name: Test 
#               run: |
#                 call "C:\Program Files (x86)\Intel\oneAPI\setvars.bat"
#                 where ctest
#                 ctest --preset="windows-intel-Debug" 
