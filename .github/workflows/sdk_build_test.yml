name: SDK Build & Test
on:
    push:
        paths:
            - '.github/workflows/sdk**'
            - '.github/workflows/cli**'
            - 'cli/**'
            - 'framework/**'
            - 'starter/**'
            - 'toolkit/**'
            - 'CMake*'
        branches:
            - 'main'
    pull_request:
        branches:
            - 'main'
jobs:
    linux-base:
        runs-on: [ self-hosted, Linux]
        steps:
            - name: Basic info
              run: |
                  echo "Build for ${{ github.ref }} branch in ${{ github.repository }} repository."
                  echo "Job triggered by ${{ github.event_name }}, on self-hosted ${{ runner.os }}."  
                    echo "Log level: ${{ github.event.inputs.logLevel }}"
                  echo "Tags: ${{ github.event.inputs.tags }}"
            - name: Check out repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Build go cli
              run: go build -o ocp cli/main.go
    linux-gnu-build:
        needs: linux-base
        runs-on: [ self-hosted, Linux]
        steps:
            - name: Build 
              run: ./ocp build -b Debug -c gnu -t all
    linux-gnu-test:
        needs: linux-gnu-build
        runs-on: [ self-hosted, Linux]
        steps:
            - name: Test 
              run: ./ocp test -b Debug -c gnu
    linux-intel-build:
        needs: linux-base
        runs-on: [ self-hosted, Linux]
        steps:
            - name: Build 
              run: ./ocp build -b Debug -c intel -t all
    linux-intel-test:
        needs: linux-intel-build
        runs-on: [ self-hosted, Linux]
        steps:
            - name: Test 
              run: ./ocp test -b Debug -c intel
    mac-base:
        runs-on: [ self-hosted, macOS]
        steps:
            - name: Basic info
              run: |
                  echo "Build for ${{ github.ref }} branch in ${{ github.repository }} repository."
                  echo "Job triggered by ${{ github.event_name }}, on self-hosted ${{ runner.os }}."  
                    echo "Log level: ${{ github.event.inputs.logLevel }}"
                  echo "Tags: ${{ github.event.inputs.tags }}"
            - name: Check out repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Build go cli
              run: |
                export PATH=$PATH:/usr/local/go/bin
                go build -o ocp cli/main.go
    # mac-gnu-build:
    #     needs: mac-base
    #     runs-on: [ self-hosted, macOS]
    #     steps:
    #         - name: Build 
    #           run: ./ocp build -b Debug -c gnu -t all
    # mac-gnu-test:
    #     needs: mac-gnu-build
    #     runs-on: [ self-hosted, macOS]
    #     steps:
    #         - name: Test 
    #           run: ./ocp test -b Debug -c gnu
    mac-intel-build:
        needs: mac-base
        runs-on: [ self-hosted, macOS]
        steps:
            - name: Build 
              run: ./ocp build -b Debug -c intel -t all
    mac-intel-test:
        needs: mac-intel-build
        runs-on: [ self-hosted, macOS]
        steps:
            - name: Test 
              run: ./ocp test -b Debug -c intel
    windows-base:
        runs-on: [ self-hosted, Windows]
        steps:
            - name: Basic info
              run: |
                  echo "Build for ${{ github.ref }} branch in ${{ github.repository }} repository."
                  echo "Job triggered by ${{ github.event_name }}, on self-hosted ${{ runner.os }}."  
                    echo "Log level: ${{ github.event.inputs.logLevel }}"
                  echo "Tags: ${{ github.event.inputs.tags }}"
            - name: Check out repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Build go cli
              run: |
                $env:PATH+=";C:\Program Files\Go\bin"
                go build -o ocp.exe cli/main.go
    # windows-mingw64-build:
    #     needs: windows-base
    #     runs-on: [ self-hosted, Windows]
    #     steps:
    #         - name: Build 
    #           run: C:/msys64/msys2_shell -mingw64 -defterm -here -full-path -no-start -shell bash -c "./ocp build -b Debug -c gnu -t all"
    # windows-mingw64-test:
    #     needs: windows-mingw64-build
    #     runs-on: [ self-hosted, Windows]
    #     steps:
    #         - name: Test 
    #           run: C:/msys64/msys2_shell -mingw64 -defterm -here -full-path -no-start -shell bash -c "./ocp test -b Debug -c gnu -t all"
    windows-intel-build:
        needs: windows-base
        runs-on: [ self-hosted, Windows]
        defaults:
            run:
                shell: cmd
        steps:
            - name: Build 
              run: ocp.exe build -b Debug -c intel -t all
    windows-intel-test:
        needs: windows-intel-build
        runs-on: [ self-hosted, Windows]
        defaults:
            run:
                shell: cmd
        steps:
            - name: Test 
              run: ocp.exe test -b Debug -c intel -t all
